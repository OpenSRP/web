// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/pages/locations/LocationGroupAddition renders without crashing 1`] = `
<LocationUnitGroupAdd>
  <section>
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        title="Add Location Unit Group"
        titleAttributes={Object {}}
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          title="Add Location Unit Group"
          titleAttributes={Object {}}
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <h5
      className="mb-3"
    >
      Add Location Unit Group
    </h5>
    <div
      className="bg-white p-5"
    >
      <ForwardRef(InternalForm)
        initialValues={
          Object {
            "status": "active",
          }
        }
        labelCol={
          Object {
            "span": 8,
          }
        }
        name="location-add"
        requiredMark="optional"
        validateMessages={
          Object {
            "number": Object {
              "range": "\${label} must be between \${min} and \${max}",
            },
            "required": "\${label} is required!",
            "types": Object {
              "email": "\${label} is not validate email!",
              "number": "\${label} is not a validate number!",
            },
          }
        }
        wrapperCol={
          Object {
            "span": 8,
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-horizontal"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "location-add",
                },
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="location-add"
            initialValues={
              Object {
                "status": "active",
              }
            }
            name="location-add"
            onFinishFailed={[Function]}
            validateMessages={
              Object {
                "number": Object {
                  "range": "\${label} must be between \${min} and \${max}",
                },
                "required": "\${label} is required!",
                "types": Object {
                  "email": "\${label} is not validate email!",
                  "number": "\${label} is not a validate number!",
                },
              }
            }
          >
            <form
              className="ant-form ant-form-horizontal"
              id="location-add"
              onSubmit={[Function]}
            >
              <FormItem
                label="Location Name"
                name="name"
                rules={
                  Array [
                    Object {
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Location Name"
                  messageVariables={
                    Object {
                      "label": "Location Name",
                    }
                  }
                  name="name"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_name"
                    label="Location Name"
                    messageVariables={
                      Object {
                        "label": "Location Name",
                      }
                    }
                    name={
                      Array [
                        "name",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="location-add_name"
                          label="Location Name"
                          name="name"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark="optional"
                          rules={
                            Array [
                              Object {
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required ant-form-item-required-mark-optional"
                                htmlFor="location-add_name"
                                title="Location Name"
                              >
                                Location Name
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Location Name"
                          name={
                            Array [
                              "name",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={1}
                                  >
                                    <Select
                                      bordered={true}
                                      choiceTransitionName=""
                                      filterOption={[Function]}
                                      id="location-add_name"
                                      onChange={[Function]}
                                      optionFilterProp="children"
                                      placeholder="Enter a location group name"
                                      showSearch={true}
                                      transitionName="slide-up"
                                    >
                                      <Select
                                        choiceTransitionName=""
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        id="location-add_name"
                                        inputIcon={[Function]}
                                        listHeight={256}
                                        listItemHeight={24}
                                        menuItemSelectedIcon={null}
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        optionFilterProp="children"
                                        placeholder="Enter a location group name"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        showSearch={true}
                                        transitionName="slide-up"
                                      >
                                        <ForwardRef(Select)
                                          choiceTransitionName=""
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          id="location-add_name"
                                          inputIcon={[Function]}
                                          listHeight={256}
                                          listItemHeight={24}
                                          menuItemSelectedIcon={null}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          optionFilterProp="children"
                                          placeholder="Enter a location group name"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          showSearch={true}
                                          transitionName="slide-up"
                                        >
                                          <div
                                            className="ant-select ant-select-single ant-select-show-arrow ant-select-show-search"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={false}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <OptionList
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={
                                                    Array [
                                                      Object {
                                                        "data": Object {
                                                          "chec": true,
                                                          "children": "Option 1",
                                                          "key": "Option1",
                                                          "value": "Option1",
                                                        },
                                                        "groupOption": false,
                                                        "key": "Option1",
                                                      },
                                                      Object {
                                                        "data": Object {
                                                          "chec": true,
                                                          "children": "Option 2",
                                                          "key": "Option2",
                                                          "value": "Option2",
                                                        },
                                                        "groupOption": false,
                                                        "key": "Option2",
                                                      },
                                                      Object {
                                                        "data": Object {
                                                          "chec": true,
                                                          "children": "Option 3",
                                                          "key": "Option3",
                                                          "value": "Option3",
                                                        },
                                                        "groupOption": false,
                                                        "key": "Option3",
                                                      },
                                                    ]
                                                  }
                                                  height={256}
                                                  id="location-add_name"
                                                  itemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "chec": true,
                                                        "children": "Option 1",
                                                        "key": "Option1",
                                                        "value": "Option1",
                                                      },
                                                      Object {
                                                        "chec": true,
                                                        "children": "Option 2",
                                                        "key": "Option2",
                                                        "value": "Option2",
                                                      },
                                                      Object {
                                                        "chec": true,
                                                        "children": "Option 3",
                                                        "key": "Option3",
                                                        "value": "Option3",
                                                      },
                                                    ]
                                                  }
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={Set {}}
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="slide-up"
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                autoDestroy={false}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <OptionList
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "chec": true,
                                                              "children": "Option 1",
                                                              "key": "Option1",
                                                              "value": "Option1",
                                                            },
                                                            "groupOption": false,
                                                            "key": "Option1",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "chec": true,
                                                              "children": "Option 2",
                                                              "key": "Option2",
                                                              "value": "Option2",
                                                            },
                                                            "groupOption": false,
                                                            "key": "Option2",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "chec": true,
                                                              "children": "Option 3",
                                                              "key": "Option3",
                                                              "value": "Option3",
                                                            },
                                                            "groupOption": false,
                                                            "key": "Option3",
                                                          },
                                                        ]
                                                      }
                                                      height={256}
                                                      id="location-add_name"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "chec": true,
                                                            "children": "Option 1",
                                                            "key": "Option1",
                                                            "value": "Option1",
                                                          },
                                                          Object {
                                                            "chec": true,
                                                            "children": "Option 2",
                                                            "key": "Option2",
                                                            "value": "Option2",
                                                          },
                                                          Object {
                                                            "chec": true,
                                                            "children": "Option 3",
                                                            "key": "Option3",
                                                            "value": "Option3",
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={Set {}}
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName=""
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="slide-up"
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  choiceTransitionName=""
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="location-add_name_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="location-add_name_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="location-add_name_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="location-add_name"
                                                            role="combobox"
                                                            type="search"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-placeholder"
                                                        >
                                                          Enter a location group name
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  id="location-add_name"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  optionFilterProp="children"
                                                  placeholder="Enter a location group name"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={true}
                                                  tokenWithEnter={false}
                                                  transitionName="slide-up"
                                                  values={Array []}
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SingleSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="location-add_name_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="location-add_name_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="location-add_name_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="location-add_name"
                                                                role="combobox"
                                                                type="search"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            >
                                                              Enter a location group name
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      id="location-add_name"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="location-add_name_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="location-add_name_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="location-add_name_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="location-add_name"
                                                            role="combobox"
                                                            type="search"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={256}
                                                      listItemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputCompositionEnd={[Function]}
                                                      onInputCompositionStart={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onInputPaste={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      optionFilterProp="children"
                                                      placeholder="Enter a location group name"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      tokenWithEnter={false}
                                                      transitionName="slide-up"
                                                      values={Array []}
                                                    >
                                                      <span
                                                        className="ant-select-selection-search"
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          attrs={Object {}}
                                                          editable={true}
                                                          id="location-add_name"
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onPaste={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="location-add_name_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="location-add_name_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="location-add_name_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            id="location-add_name"
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            readOnly={false}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": null,
                                                              }
                                                            }
                                                            type="search"
                                                            unselectable={null}
                                                            value=""
                                                          />
                                                        </Input>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-placeholder"
                                                      >
                                                        Enter a location group name
                                                      </span>
                                                    </SingleSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                            <TransBtn
                                              className="ant-select-arrow"
                                              customizeIcon={[Function]}
                                              customizeIconProps={
                                                Object {
                                                  "focused": false,
                                                  "loading": undefined,
                                                  "open": undefined,
                                                  "searchValue": "",
                                                  "showSearch": true,
                                                }
                                              }
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-arrow"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-select-suffix"
                                                >
                                                  <AntdIcon
                                                    className="ant-select-suffix"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-select-suffix"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        className=""
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className=""
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TransBtn>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </Select>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Status"
                name="status"
                rules={
                  Array [
                    Object {
                      "required": true,
                    },
                  ]
                }
                valuePropName="checked"
              >
                <WrapperField
                  label="Status"
                  messageVariables={
                    Object {
                      "label": "Status",
                    }
                  }
                  name="status"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Field
                    key="_status"
                    label="Status"
                    messageVariables={
                      Object {
                        "label": "Status",
                      }
                    }
                    name={
                      Array [
                        "status",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="checked"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="location-add_status"
                          label="Status"
                          name="status"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark="optional"
                          rules={
                            Array [
                              Object {
                                "required": true,
                              },
                            ]
                          }
                          valuePropName="checked"
                        >
                          <Col
                            className="ant-form-item-label"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required ant-form-item-required-mark-optional"
                                htmlFor="location-add_status"
                                title="Status"
                              >
                                Status
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Status"
                          name={
                            Array [
                              "status",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                          valuePropName="checked"
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={1}
                                    value="active"
                                  >
                                    <ForwardRef
                                      checked="active"
                                      defaultValue="active"
                                      id="location-add_status"
                                      onChange={[Function]}
                                    >
                                      <div
                                        className="ant-radio-group ant-radio-group-outline"
                                        id="location-add_status"
                                      >
                                        <Radio
                                          key="active"
                                          type="radio"
                                          value="active"
                                        >
                                          <label
                                            className="ant-radio-wrapper ant-radio-wrapper-checked"
                                          >
                                            <Checkbox
                                              checked={true}
                                              className=""
                                              defaultChecked={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              prefixCls="ant-radio"
                                              style={Object {}}
                                              type="radio"
                                              value="active"
                                            >
                                              <span
                                                className="ant-radio ant-radio-checked"
                                                style={Object {}}
                                              >
                                                <input
                                                  checked={true}
                                                  className="ant-radio-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  type="radio"
                                                  value="active"
                                                />
                                                <span
                                                  className="ant-radio-inner"
                                                />
                                              </span>
                                            </Checkbox>
                                            <span>
                                              Active
                                            </span>
                                          </label>
                                        </Radio>
                                        <Radio
                                          key="inactive"
                                          type="radio"
                                          value="inactive"
                                        >
                                          <label
                                            className="ant-radio-wrapper"
                                          >
                                            <Checkbox
                                              checked={false}
                                              className=""
                                              defaultChecked={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              prefixCls="ant-radio"
                                              style={Object {}}
                                              type="radio"
                                              value="inactive"
                                            >
                                              <span
                                                className="ant-radio"
                                                style={Object {}}
                                              >
                                                <input
                                                  checked={false}
                                                  className="ant-radio-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  type="radio"
                                                  value="inactive"
                                                />
                                                <span
                                                  className="ant-radio-inner"
                                                />
                                              </span>
                                            </Checkbox>
                                            <span>
                                              Inactive
                                            </span>
                                          </label>
                                        </Radio>
                                      </div>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Type"
                name="type"
                rules={
                  Array [
                    Object {
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Type"
                  messageVariables={
                    Object {
                      "label": "Type",
                    }
                  }
                  name="type"
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    key="_type"
                    label="Type"
                    messageVariables={
                      Object {
                        "label": "Type",
                      }
                    }
                    name={
                      Array [
                        "type",
                      ]
                    }
                    onReset={[Function]}
                    rules={
                      Array [
                        Object {
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="location-add_type"
                          label="Type"
                          name="type"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark="optional"
                          rules={
                            Array [
                              Object {
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-label"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required ant-form-item-required-mark-optional"
                                htmlFor="location-add_type"
                                title="Type"
                              >
                                Type
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Type"
                          name={
                            Array [
                              "type",
                            ]
                          }
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "required": true,
                              },
                            ]
                          }
                          touched={false}
                          validateStatus=""
                          validating={false}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={1}
                                  >
                                    <TextArea
                                      id="location-add_type"
                                      onChange={[Function]}
                                      placeholder="Description"
                                      rows={4}
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <TextArea
                                            className=""
                                            id="location-add_type"
                                            onChange={[Function]}
                                            placeholder="Description"
                                            prefixCls="ant-input"
                                            rows={4}
                                          />
                                        }
                                        handleReset={[Function]}
                                        id="location-add_type"
                                        inputType="text"
                                        onChange={[Function]}
                                        placeholder="Description"
                                        prefixCls="ant-input"
                                        rows={4}
                                        triggerFocus={[Function]}
                                        value=""
                                      >
                                        <TextArea
                                          className=""
                                          id="location-add_type"
                                          onChange={[Function]}
                                          placeholder="Description"
                                          prefixCls="ant-input"
                                          rows={4}
                                          value=""
                                        >
                                          <ResizableTextArea
                                            className=""
                                            id="location-add_type"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Description"
                                            prefixCls="ant-input"
                                            rows={4}
                                            value=""
                                          >
                                            <ResizeObserver
                                              disabled={true}
                                              onResize={[Function]}
                                            >
                                              <textarea
                                                className="ant-input"
                                                id="location-add_type"
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Description"
                                                rows={4}
                                                style={Object {}}
                                                value=""
                                              />
                                            </ResizeObserver>
                                          </ResizableTextArea>
                                        </TextArea>
                                      </ClearableLabeledInput>
                                    </TextArea>
                                  </Component>
                                </div>
                              </div>
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                wrapperCol={
                  Object {
                    "offset": 8,
                    "span": 8,
                  }
                }
              >
                <Row
                  className="ant-form-item"
                  key="row"
                >
                  <div
                    className="ant-row ant-form-item"
                    style={Object {}}
                  >
                    <FormItemLabel
                      prefixCls="ant-form"
                      requiredMark="optional"
                      wrapperCol={
                        Object {
                          "offset": 8,
                          "span": 8,
                        }
                      }
                    />
                    <FormItemInput
                      errors={Array []}
                      onDomErrorVisibleChange={[Function]}
                      prefixCls="ant-form"
                      validateStatus=""
                      wrapperCol={
                        Object {
                          "offset": 8,
                          "span": 8,
                        }
                      }
                    >
                      <Col
                        className="ant-form-item-control"
                        offset={8}
                        span={8}
                      >
                        <div
                          className="ant-col ant-col-8 ant-col-offset-8 ant-form-item-control"
                          style={Object {}}
                        >
                          <div
                            className="ant-form-item-control-input"
                          >
                            <div
                              className="ant-form-item-control-input-content"
                            >
                              <Button
                                block={false}
                                ghost={false}
                                htmlType="submit"
                                loading={false}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary"
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      Submit
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                              <Button
                                block={false}
                                ghost={false}
                                htmlType="reset"
                                loading={false}
                                type="default"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-default"
                                    onClick={[Function]}
                                    type="reset"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      Cancel
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                            </div>
                          </div>
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </div>
                      </Col>
                    </FormItemInput>
                  </div>
                </Row>
              </FormItem>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </div>
  </section>
</LocationUnitGroupAdd>
`;
