// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`productForm edit form submission: Upload button 1`] = `"Upload"`;

exports[`productForm edit form submission: accountabilityPeriod 1`] = `
<input
  aria-valuemax={9007199254740991}
  aria-valuemin={0}
  aria-valuenow={1}
  autoComplete="off"
  className="ant-input-number-input"
  max={9007199254740991}
  min={0}
  name="accountabilityPeriod"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onMouseUp={[Function]}
  required={false}
  role="spinbutton"
  step={1}
  value="1"
/>
`;

exports[`productForm edit form submission: appropriateUsage 1`] = `
<textarea
  className="ant-input"
  name="appropriateUsage"
  onBlur={[Function]}
  onChange={[Function]}
  onKeyDown={[Function]}
  placeholder="Input.TextArea"
  style={Object {}}
  value="staff is trained to use it appropriately"
/>
`;

exports[`productForm edit form submission: availability 1`] = `
<textarea
  className="ant-input"
  name="availability"
  onBlur={[Function]}
  onChange={[Function]}
  onKeyDown={[Function]}
  placeholder="Input.TextArea"
  style={Object {}}
  value="available"
/>
`;

exports[`productForm edit form submission: condition 1`] = `
<textarea
  className="ant-input"
  name="condition"
  onBlur={[Function]}
  onChange={[Function]}
  onKeyDown={[Function]}
  placeholder="Input.TextArea"
  style={Object {}}
  value="good condition"
/>
`;

exports[`productForm edit form submission: isAttractive radio1 1`] = `
<input
  checked={true}
  className="ant-radio-input"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  type="radio"
  value={true}
/>
`;

exports[`productForm edit form submission: isAttractive radio2 1`] = `
<input
  checked={false}
  className="ant-radio-input"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  type="radio"
  value={false}
/>
`;

exports[`productForm edit form submission: materialNumber 1`] = `
<input
  className="ant-input"
  name="materialNumber"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  type="text"
  value="MT-123"
/>
`;

exports[`productForm edit form submission: productName 1`] = `
<input
  className="ant-input"
  name="productName"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  placeholder="Enter the product name"
  type="text"
  value="Scale"
/>
`;

exports[`productForm edit form submission: uniqueId 1`] = `
<input
  className="ant-input"
  id="uniqueId"
  name="uniqueId"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  readOnly={true}
  type="hidden"
  value={1}
/>
`;

exports[`productForm edit form submission: upload button 1`] = `
<input
  accept="image/*"
  key="rc-upload-1605170760460-4"
  multiple={false}
  onChange={[Function]}
  onClick={[Function]}
  style={
    Object {
      "display": "none",
    }
  }
  type="file"
/>
`;

exports[`productForm renders correctly: radio 0 1`] = `"Attractive item?"`;

exports[`productForm renders correctly: radio 1 1`] = `"yes"`;

exports[`productForm renders correctly: radio 2 1`] = `"no"`;

exports[`productForm validation works: "Product name" 1`] = `undefined`;

exports[`productForm validation works: "productPhoto" 1`] = `undefined`;

exports[`productForm validation works: accountability period 1`] = `undefined`;

exports[`productForm validation works: appropriateUsage 1`] = `undefined`;

exports[`productForm validation works: availability 1`] = `undefined`;

exports[`productForm validation works: availability 2`] = `undefined`;

exports[`productForm validation works: condition 1`] = `undefined`;

exports[`productForm validation works: full form 1`] = `
<form
  className="ant-form ant-form-horizontal"
  onReset={[Function]}
  onSubmit={[Function]}
  onSubmitCapture={[Function]}
>
  <Component
    id="productName"
    label="Product name:"
    name="productName"
    required={true}
  >
    <Field
      name="productName"
    >
      <FormItem
        hasFeedback={false}
        help={
          <React.Fragment>
            <li>
              Required
            </li>
          </React.Fragment>
        }
        id="productName"
        label="Product name:"
        required={true}
        validateStatus="error"
      >
        <Row
          className="ant-form-item ant-form-item-with-help ant-form-item-has-error"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help ant-form-item-has-error"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="productName"
              label="Product name:"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
              validateStatus="error"
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Product name:"
                  >
                    Product name
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={
                Array [
                  <React.Fragment>
                    <li>
                      Required
                    </li>
                  </React.Fragment>,
                ]
              }
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="productName"
              label="Product name:"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status="error"
              validateStatus="error"
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="productName"
                        placeholder="Enter the product name"
                      >
                        <Component
                          name="productName"
                        >
                          <Field
                            name="productName"
                          >
                            <Input
                              name="productName"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Enter the product name"
                              type="text"
                              value=""
                            >
                              <ClearableLabeledInput
                                bordered={true}
                                element={
                                  <input
                                    className="ant-input"
                                    name="productName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder="Enter the product name"
                                    type="text"
                                    value=""
                                  />
                                }
                                focused={false}
                                handleReset={[Function]}
                                inputType="input"
                                name="productName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Enter the product name"
                                prefixCls="ant-input"
                                triggerFocus={[Function]}
                                type="text"
                                value=""
                              >
                                <input
                                  className="ant-input"
                                  name="productName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  placeholder="Enter the product name"
                                  type="text"
                                  value=""
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={
                      Array [
                        <React.Fragment>
                          <li>
                            Required
                          </li>
                        </React.Fragment>,
                      ]
                    }
                    help={
                      <React.Fragment>
                        <li>
                          Required
                        </li>
                      </React.Fragment>
                    }
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    hidden={true}
    id="uniqueId"
    name="uniqueId"
    required={true}
  >
    <Field
      name="uniqueId"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        hidden={true}
        id="uniqueId"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-hidden"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-hidden"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              hidden={true}
              id="uniqueId"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            />
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              hidden={true}
              id="uniqueId"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        id="uniqueId"
                        name="uniqueId"
                        readOnly={true}
                        type="hidden"
                      >
                        <Component
                          name="uniqueId"
                        >
                          <Field
                            name="uniqueId"
                          >
                            <Input
                              id="uniqueId"
                              name="uniqueId"
                              onBlur={[Function]}
                              onChange={[Function]}
                              readOnly={true}
                              type="hidden"
                            >
                              <ClearableLabeledInput
                                bordered={true}
                                element={
                                  <input
                                    className="ant-input"
                                    id="uniqueId"
                                    name="uniqueId"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    readOnly={true}
                                    type="hidden"
                                  />
                                }
                                focused={false}
                                handleReset={[Function]}
                                id="uniqueId"
                                inputType="input"
                                name="uniqueId"
                                onBlur={[Function]}
                                onChange={[Function]}
                                prefixCls="ant-input"
                                readOnly={true}
                                triggerFocus={[Function]}
                                type="hidden"
                                value=""
                              >
                                <input
                                  className="ant-input"
                                  id="uniqueId"
                                  name="uniqueId"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  readOnly={true}
                                  type="hidden"
                                  value=""
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="materialNumber"
    label="Material number:"
    name="materialNumber"
    required={true}
  >
    <Field
      name="materialNumber"
    >
      <FormItem
        hasFeedback={false}
        help={
          <React.Fragment>
            <li>
              Required
            </li>
          </React.Fragment>
        }
        id="materialNumber"
        label="Material number:"
        required={true}
        validateStatus="error"
      >
        <Row
          className="ant-form-item ant-form-item-with-help ant-form-item-has-error"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help ant-form-item-has-error"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="materialNumber"
              label="Material number:"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
              validateStatus="error"
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Material number:"
                  >
                    Material number
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={
                Array [
                  <React.Fragment>
                    <li>
                      Required
                    </li>
                  </React.Fragment>,
                ]
              }
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="materialNumber"
              label="Material number:"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status="error"
              validateStatus="error"
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="materialNumber"
                      >
                        <Component
                          name="materialNumber"
                        >
                          <Field
                            name="materialNumber"
                          >
                            <Input
                              name="materialNumber"
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="text"
                              value=""
                            >
                              <ClearableLabeledInput
                                bordered={true}
                                element={
                                  <input
                                    className="ant-input"
                                    name="materialNumber"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    type="text"
                                    value=""
                                  />
                                }
                                focused={false}
                                handleReset={[Function]}
                                inputType="input"
                                name="materialNumber"
                                onBlur={[Function]}
                                onChange={[Function]}
                                prefixCls="ant-input"
                                triggerFocus={[Function]}
                                type="text"
                                value=""
                              >
                                <input
                                  className="ant-input"
                                  name="materialNumber"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={
                      Array [
                        <React.Fragment>
                          <li>
                            Required
                          </li>
                        </React.Fragment>,
                      ]
                    }
                    help={
                      <React.Fragment>
                        <li>
                          Required
                        </li>
                      </React.Fragment>
                    }
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="isAttractiveItem"
    label="Attractive item?"
    name="isAttractiveItem"
    required={true}
  >
    <Field
      name="isAttractiveItem"
    >
      <FormItem
        hasFeedback={false}
        help={
          <React.Fragment>
            <li>
              Required
            </li>
          </React.Fragment>
        }
        id="isAttractiveItem"
        label="Attractive item?"
        required={true}
        validateStatus="error"
      >
        <Row
          className="ant-form-item ant-form-item-with-help ant-form-item-has-error"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help ant-form-item-has-error"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="isAttractiveItem"
              label="Attractive item?"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
              validateStatus="error"
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Attractive item?"
                  >
                    Attractive item?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={
                Array [
                  <React.Fragment>
                    <li>
                      Required
                    </li>
                  </React.Fragment>,
                ]
              }
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="isAttractiveItem"
              label="Attractive item?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status="error"
              validateStatus="error"
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <Component
                        name="isAttractiveItem"
                        options={
                          Array [
                            Object {
                              "label": "yes",
                              "value": true,
                            },
                            Object {
                              "label": "no",
                              "value": false,
                            },
                          ]
                        }
                      >
                        <Component
                          name="isAttractiveItem"
                        >
                          <Field
                            name="isAttractiveItem"
                          >
                            <ForwardRef
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "yes",
                                    "value": true,
                                  },
                                  Object {
                                    "label": "no",
                                    "value": false,
                                  },
                                ]
                              }
                            >
                              <div
                                className="ant-radio-group ant-radio-group-outline"
                              >
                                <Radio
                                  checked={false}
                                  key="radio-group-value-options-true"
                                  prefixCls="ant-radio"
                                  type="radio"
                                  value={true}
                                >
                                  <label
                                    className="ant-radio-wrapper"
                                  >
                                    <Checkbox
                                      checked={false}
                                      className=""
                                      defaultChecked={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      prefixCls="ant-radio"
                                      style={Object {}}
                                      type="radio"
                                      value={true}
                                    >
                                      <span
                                        className="ant-radio"
                                        style={Object {}}
                                      >
                                        <input
                                          checked={false}
                                          className="ant-radio-input"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          type="radio"
                                          value={true}
                                        />
                                        <span
                                          className="ant-radio-inner"
                                        />
                                      </span>
                                    </Checkbox>
                                    <span>
                                      yes
                                    </span>
                                  </label>
                                </Radio>
                                <Radio
                                  checked={false}
                                  key="radio-group-value-options-false"
                                  prefixCls="ant-radio"
                                  type="radio"
                                  value={false}
                                >
                                  <label
                                    className="ant-radio-wrapper"
                                  >
                                    <Checkbox
                                      checked={false}
                                      className=""
                                      defaultChecked={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      prefixCls="ant-radio"
                                      style={Object {}}
                                      type="radio"
                                      value={false}
                                    >
                                      <span
                                        className="ant-radio"
                                        style={Object {}}
                                      >
                                        <input
                                          checked={false}
                                          className="ant-radio-input"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          type="radio"
                                          value={false}
                                        />
                                        <span
                                          className="ant-radio-inner"
                                        />
                                      </span>
                                    </Checkbox>
                                    <span>
                                      no
                                    </span>
                                  </label>
                                </Radio>
                              </div>
                            </ForwardRef>
                          </Field>
                        </Component>
                      </Component>
                    </div>
                  </div>
                  <ErrorList
                    errors={
                      Array [
                        <React.Fragment>
                          <li>
                            Required
                          </li>
                        </React.Fragment>,
                      ]
                    }
                    help={
                      <React.Fragment>
                        <li>
                          Required
                        </li>
                      </React.Fragment>
                    }
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="availability"
    label="Is it there?"
    name="availability"
    required={true}
  >
    <Field
      name="availability"
    >
      <FormItem
        hasFeedback={false}
        help={
          <React.Fragment>
            <li>
              Required
            </li>
          </React.Fragment>
        }
        id="availability"
        label="Is it there?"
        required={true}
        validateStatus="error"
      >
        <Row
          className="ant-form-item ant-form-item-with-help ant-form-item-has-error"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help ant-form-item-has-error"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="availability"
              label="Is it there?"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
              validateStatus="error"
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Is it there?"
                  >
                    Is it there?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={
                Array [
                  <React.Fragment>
                    <li>
                      Required
                    </li>
                  </React.Fragment>,
                ]
              }
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="availability"
              label="Is it there?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status="error"
              validateStatus="error"
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="availability"
                        placeholder="Input.TextArea"
                      >
                        <Component
                          name="availability"
                        >
                          <Field
                            name="availability"
                          >
                            <TextArea
                              name="availability"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Input.TextArea"
                              value=""
                            >
                              <div
                                className="ant-input-textarea"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="availability"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value=""
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="availability"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Input.TextArea"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  value=""
                                >
                                  <TextArea
                                    className=""
                                    name="availability"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Input.TextArea"
                                    prefixCls="ant-input"
                                    value=""
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="availability"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value=""
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="availability"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Input.TextArea"
                                          style={Object {}}
                                          value=""
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </div>
                            </TextArea>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={
                      Array [
                        <React.Fragment>
                          <li>
                            Required
                          </li>
                        </React.Fragment>,
                      ]
                    }
                    help={
                      <React.Fragment>
                        <li>
                          Required
                        </li>
                      </React.Fragment>
                    }
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="condition"
    label="Is it in good condition?"
    name="condition"
  >
    <Field
      name="condition"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="condition"
        label="Is it in good condition?"
      >
        <Row
          className="ant-form-item"
          key="row"
        >
          <div
            className="ant-row ant-form-item"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="condition"
              label="Is it in good condition?"
              prefixCls="ant-form"
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className=""
                    title="Is it in good condition?"
                  >
                    Is it in good condition?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="condition"
              label="Is it in good condition?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="condition"
                        placeholder="Input.TextArea"
                      >
                        <Component
                          name="condition"
                        >
                          <Field
                            name="condition"
                          >
                            <TextArea
                              name="condition"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Input.TextArea"
                              value=""
                            >
                              <div
                                className="ant-input-textarea"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="condition"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value=""
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="condition"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Input.TextArea"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  value=""
                                >
                                  <TextArea
                                    className=""
                                    name="condition"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Input.TextArea"
                                    prefixCls="ant-input"
                                    value=""
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="condition"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value=""
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="condition"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Input.TextArea"
                                          style={Object {}}
                                          value=""
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </div>
                            </TextArea>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="appropriateUsage"
    label="Is it being used appropriately?"
    name="appropriateUsage"
  >
    <Field
      name="appropriateUsage"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="appropriateUsage"
        label="Is it being used appropriately?"
      >
        <Row
          className="ant-form-item"
          key="row"
        >
          <div
            className="ant-row ant-form-item"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="appropriateUsage"
              label="Is it being used appropriately?"
              prefixCls="ant-form"
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className=""
                    title="Is it being used appropriately?"
                  >
                    Is it being used appropriately?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="appropriateUsage"
              label="Is it being used appropriately?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="appropriateUsage"
                        placeholder="Input.TextArea"
                      >
                        <Component
                          name="appropriateUsage"
                        >
                          <Field
                            name="appropriateUsage"
                          >
                            <TextArea
                              name="appropriateUsage"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Input.TextArea"
                              value=""
                            >
                              <div
                                className="ant-input-textarea"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="appropriateUsage"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value=""
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="appropriateUsage"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Input.TextArea"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  value=""
                                >
                                  <TextArea
                                    className=""
                                    name="appropriateUsage"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Input.TextArea"
                                    prefixCls="ant-input"
                                    value=""
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="appropriateUsage"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value=""
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="appropriateUsage"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Input.TextArea"
                                          style={Object {}}
                                          value=""
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </div>
                            </TextArea>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="accountabilityPeriod"
    label="Accountability period (in months)"
    name="accountabilityPeriod"
    required={true}
  >
    <Field
      name="accountabilityPeriod"
    >
      <FormItem
        hasFeedback={false}
        help={
          <React.Fragment>
            <li>
              Required
            </li>
          </React.Fragment>
        }
        id="accountabilityPeriod"
        label="Accountability period (in months)"
        required={true}
        validateStatus="error"
      >
        <Row
          className="ant-form-item ant-form-item-with-help ant-form-item-has-error"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help ant-form-item-has-error"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="accountabilityPeriod"
              label="Accountability period (in months)"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
              validateStatus="error"
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Accountability period (in months)"
                  >
                    Accountability period (in months)
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={
                Array [
                  <React.Fragment>
                    <li>
                      Required
                    </li>
                  </React.Fragment>,
                ]
              }
              hasFeedback={false}
              help={
                <React.Fragment>
                  <li>
                    Required
                  </li>
                </React.Fragment>
              }
              id="accountabilityPeriod"
              label="Accountability period (in months)"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status="error"
              validateStatus="error"
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <Component
                        min={0}
                        name="accountabilityPeriod"
                      >
                        <Component
                          name="accountabilityPeriod"
                        >
                          <Field
                            name="accountabilityPeriod"
                          >
                            <ForwardRef
                              min={0}
                              name="accountabilityPeriod"
                              onBlur={[Function]}
                              onChange={[Function]}
                              step={1}
                            >
                              <InputNumber
                                autoComplete="off"
                                className=""
                                downHandler={
                                  <ForwardRef(DownOutlined)
                                    className="ant-input-number-handler-down-inner"
                                  />
                                }
                                focusOnUpDown={true}
                                max={9007199254740991}
                                min={0}
                                name="accountabilityPeriod"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onPressEnter={[Function]}
                                parser={[Function]}
                                prefixCls="ant-input-number"
                                required={false}
                                step={1}
                                style={Object {}}
                                upHandler={
                                  <ForwardRef(UpOutlined)
                                    className="ant-input-number-handler-up-inner"
                                  />
                                }
                                useTouch={false}
                              >
                                <div
                                  className="ant-input-number"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-input-number-handler-wrap"
                                  >
                                    <span
                                      aria-label="Increase Value"
                                      className="ant-input-number-handler ant-input-number-handler-up"
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      role="button"
                                      unselectable="on"
                                    >
                                      <ForwardRef(UpOutlined)
                                        className="ant-input-number-handler-up-inner"
                                      >
                                        <AntdIcon
                                          className="ant-input-number-handler-up-inner"
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "up",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <span
                                            aria-label="up"
                                            className="anticon anticon-up ant-input-number-handler-up-inner"
                                            role="img"
                                          >
                                            <IconReact
                                              className=""
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "up",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="up"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-up"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                  key="svg-up-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(UpOutlined)>
                                    </span>
                                    <span
                                      aria-label="Decrease Value"
                                      className="ant-input-number-handler ant-input-number-handler-down"
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      role="button"
                                      unselectable="on"
                                    >
                                      <ForwardRef(DownOutlined)
                                        className="ant-input-number-handler-down-inner"
                                      >
                                        <AntdIcon
                                          className="ant-input-number-handler-down-inner"
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "down",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <span
                                            aria-label="down"
                                            className="anticon anticon-down ant-input-number-handler-down-inner"
                                            role="img"
                                          >
                                            <IconReact
                                              className=""
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "down",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="down"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-down"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                  key="svg-down-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(DownOutlined)>
                                    </span>
                                  </div>
                                  <div
                                    className="ant-input-number-input-wrap"
                                  >
                                    <input
                                      aria-valuemax={9007199254740991}
                                      aria-valuemin={0}
                                      autoComplete="off"
                                      className="ant-input-number-input"
                                      max={9007199254740991}
                                      min={0}
                                      name="accountabilityPeriod"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseUp={[Function]}
                                      required={false}
                                      role="spinbutton"
                                      step={1}
                                      value=""
                                    />
                                  </div>
                                </div>
                              </InputNumber>
                            </ForwardRef>
                          </Field>
                        </Component>
                      </Component>
                    </div>
                  </div>
                  <ErrorList
                    errors={
                      Array [
                        <React.Fragment>
                          <li>
                            Required
                          </li>
                        </React.Fragment>,
                      ]
                    }
                    help={
                      <React.Fragment>
                        <li>
                          Required
                        </li>
                      </React.Fragment>
                    }
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="productPhoto"
    label="Photo of the product"
    name="productPhoto"
  >
    <Field
      name="productPhoto"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="productPhoto"
        label="Photo of the product"
      >
        <Row
          className="ant-form-item"
          key="row"
        >
          <div
            className="ant-row ant-form-item"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="productPhoto"
              label="Photo of the product"
              prefixCls="ant-form"
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className=""
                    title="Photo of the product"
                  >
                    Photo of the product
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="productPhoto"
              label="Photo of the product"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <Upload
                        accept="image/*"
                        action=""
                        beforeUpload={[Function]}
                        className=""
                        customRequest={[Function]}
                        data={Object {}}
                        disabled={false}
                        listType="picture-card"
                        multiple={false}
                        name="productPhoto"
                        onChange={[Function]}
                        showUploadList={false}
                        supportServerRender={true}
                        type="select"
                      >
                        <span
                          className="ant-upload-picture-card-wrapper"
                        >
                          <div
                            className="ant-upload ant-upload-select ant-upload-select-picture-card"
                          >
                            <Upload
                              accept="image/*"
                              action=""
                              beforeUpload={[Function]}
                              component="span"
                              customRequest={[Function]}
                              data={Object {}}
                              disabled={false}
                              headers={Object {}}
                              listType="picture-card"
                              multipart={false}
                              multiple={false}
                              name="productPhoto"
                              onChange={[Function]}
                              onError={[Function]}
                              onProgress={[Function]}
                              onStart={[Function]}
                              onSuccess={[Function]}
                              openFileDialogOnClick={true}
                              prefixCls="ant-upload"
                              showUploadList={false}
                              supportServerRender={true}
                              type="select"
                              withCredentials={false}
                            >
                              <AjaxUploader
                                accept="image/*"
                                action=""
                                beforeUpload={[Function]}
                                component="span"
                                customRequest={[Function]}
                                data={Object {}}
                                disabled={false}
                                headers={Object {}}
                                listType="picture-card"
                                multipart={false}
                                multiple={false}
                                name="productPhoto"
                                onChange={[Function]}
                                onError={[Function]}
                                onProgress={[Function]}
                                onStart={[Function]}
                                onSuccess={[Function]}
                                openFileDialogOnClick={true}
                                prefixCls="ant-upload"
                                showUploadList={false}
                                supportServerRender={true}
                                type="select"
                                withCredentials={false}
                              >
                                <span
                                  className="ant-upload"
                                  onClick={[Function]}
                                  onDragOver={[Function]}
                                  onDrop={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                  tabIndex="0"
                                >
                                  <input
                                    accept="image/*"
                                    key="rc-upload-1605170760460-2"
                                    multiple={false}
                                    onChange={[Function]}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "display": "none",
                                      }
                                    }
                                    type="file"
                                  />
                                  <div
                                    className="upload-button"
                                  >
                                    <ForwardRef(PlusOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {},
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {},
                                                      "tag": "style",
                                                    },
                                                  ],
                                                  "tag": "defs",
                                                },
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                  },
                                                  "tag": "path",
                                                },
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "plus",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="plus"
                                          className="anticon anticon-plus"
                                          role="img"
                                        >
                                          <IconReact
                                            className=""
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {},
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {},
                                                          "tag": "style",
                                                        },
                                                      ],
                                                      "tag": "defs",
                                                    },
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "plus",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className=""
                                              data-icon="plus"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-plus"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <defs
                                                key="svg-plus-svg-0"
                                              >
                                                <style
                                                  key="svg-plus-svg-0-defs-0"
                                                />
                                              </defs>
                                              <path
                                                d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                                                key="svg-plus-svg-1"
                                              />
                                              <path
                                                d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                                                key="svg-plus-svg-2"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(PlusOutlined)>
                                    <div
                                      style={
                                        Object {
                                          "marginTop": 8,
                                        }
                                      }
                                    >
                                      Upload
                                    </div>
                                  </div>
                                </span>
                              </AjaxUploader>
                            </Upload>
                          </div>
                        </span>
                      </Upload>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="submit"
  >
    <Field>
      <Button
        block={false}
        disabled={true}
        ghost={false}
        htmlType="submit"
        id="submit"
        loading={false}
        type="primary"
      >
        <Wave>
          <button
            className="ant-btn ant-btn-primary ant-btn-loading"
            disabled={true}
            id="submit"
            onClick={[Function]}
            type="submit"
          >
            <LoadingIcon
              existIcon={false}
              loading={true}
              prefixCls="ant-btn"
            >
              <CSSMotion
                motionName="ant-btn-loading-icon-motion"
                onAppearActive={[Function]}
                onAppearStart={[Function]}
                onEnterActive={[Function]}
                onEnterStart={[Function]}
                onLeaveActive={[Function]}
                onLeaveStart={[Function]}
                removeOnLeave={true}
                visible={true}
              >
                <DomWrapper>
                  <span
                    className="ant-btn-loading-icon"
                  >
                    <ForwardRef(LoadingOutlined)
                      className=""
                    >
                      <AntdIcon
                        className=""
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "loading",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="loading"
                          className="anticon anticon-loading"
                          role="img"
                        >
                          <IconReact
                            className="anticon-spin"
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "loading",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              className="anticon-spin"
                              data-icon="loading"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-loading"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
                                key="svg-loading-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(LoadingOutlined)>
                  </span>
                </DomWrapper>
              </CSSMotion>
            </LoadingIcon>
            <span
              key=".0"
            >
              Submit
            </span>
          </button>
        </Wave>
      </Button>
    </Field>
  </Component>
</form>
`;

exports[`productForm validation works: full form 2`] = `
<form
  className="ant-form ant-form-horizontal"
  onReset={[Function]}
  onSubmit={[Function]}
  onSubmitCapture={[Function]}
>
  <Component
    id="productName"
    label="Product name:"
    name="productName"
    required={true}
  >
    <Field
      name="productName"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="productName"
        label="Product name:"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-with-help"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="productName"
              label="Product name:"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Product name:"
                  >
                    Product name
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="productName"
              label="Product name:"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="productName"
                        placeholder="Enter the product name"
                      >
                        <Component
                          name="productName"
                        >
                          <Field
                            name="productName"
                          >
                            <Input
                              name="productName"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Enter the product name"
                              type="text"
                              value="MotorCycle"
                            >
                              <ClearableLabeledInput
                                bordered={true}
                                element={
                                  <input
                                    className="ant-input"
                                    name="productName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder="Enter the product name"
                                    type="text"
                                    value="MotorCycle"
                                  />
                                }
                                focused={false}
                                handleReset={[Function]}
                                inputType="input"
                                name="productName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Enter the product name"
                                prefixCls="ant-input"
                                triggerFocus={[Function]}
                                type="text"
                                value="MotorCycle"
                              >
                                <input
                                  className="ant-input"
                                  name="productName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  placeholder="Enter the product name"
                                  type="text"
                                  value="MotorCycle"
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    hidden={true}
    id="uniqueId"
    name="uniqueId"
    required={true}
  >
    <Field
      name="uniqueId"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        hidden={true}
        id="uniqueId"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-hidden"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-hidden"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              hidden={true}
              id="uniqueId"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            />
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              hidden={true}
              id="uniqueId"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        id="uniqueId"
                        name="uniqueId"
                        readOnly={true}
                        type="hidden"
                      >
                        <Component
                          name="uniqueId"
                        >
                          <Field
                            name="uniqueId"
                          >
                            <Input
                              id="uniqueId"
                              name="uniqueId"
                              onBlur={[Function]}
                              onChange={[Function]}
                              readOnly={true}
                              type="hidden"
                            >
                              <ClearableLabeledInput
                                bordered={true}
                                element={
                                  <input
                                    className="ant-input"
                                    id="uniqueId"
                                    name="uniqueId"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    readOnly={true}
                                    type="hidden"
                                  />
                                }
                                focused={false}
                                handleReset={[Function]}
                                id="uniqueId"
                                inputType="input"
                                name="uniqueId"
                                onBlur={[Function]}
                                onChange={[Function]}
                                prefixCls="ant-input"
                                readOnly={true}
                                triggerFocus={[Function]}
                                type="hidden"
                                value=""
                              >
                                <input
                                  className="ant-input"
                                  id="uniqueId"
                                  name="uniqueId"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  readOnly={true}
                                  type="hidden"
                                  value=""
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="materialNumber"
    label="Material number:"
    name="materialNumber"
    required={true}
  >
    <Field
      name="materialNumber"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="materialNumber"
        label="Material number:"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-with-help"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="materialNumber"
              label="Material number:"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Material number:"
                  >
                    Material number
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="materialNumber"
              label="Material number:"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="materialNumber"
                      >
                        <Component
                          name="materialNumber"
                        >
                          <Field
                            name="materialNumber"
                          >
                            <Input
                              name="materialNumber"
                              onBlur={[Function]}
                              onChange={[Function]}
                              type="text"
                              value="MK-124"
                            >
                              <ClearableLabeledInput
                                bordered={true}
                                element={
                                  <input
                                    className="ant-input"
                                    name="materialNumber"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    type="text"
                                    value="MK-124"
                                  />
                                }
                                focused={false}
                                handleReset={[Function]}
                                inputType="input"
                                name="materialNumber"
                                onBlur={[Function]}
                                onChange={[Function]}
                                prefixCls="ant-input"
                                triggerFocus={[Function]}
                                type="text"
                                value="MK-124"
                              >
                                <input
                                  className="ant-input"
                                  name="materialNumber"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value="MK-124"
                                />
                              </ClearableLabeledInput>
                            </Input>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="isAttractiveItem"
    label="Attractive item?"
    name="isAttractiveItem"
    required={true}
  >
    <Field
      name="isAttractiveItem"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="isAttractiveItem"
        label="Attractive item?"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-with-help"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="isAttractiveItem"
              label="Attractive item?"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Attractive item?"
                  >
                    Attractive item?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="isAttractiveItem"
              label="Attractive item?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <Component
                        name="isAttractiveItem"
                        options={
                          Array [
                            Object {
                              "label": "yes",
                              "value": true,
                            },
                            Object {
                              "label": "no",
                              "value": false,
                            },
                          ]
                        }
                      >
                        <Component
                          name="isAttractiveItem"
                        >
                          <Field
                            name="isAttractiveItem"
                          >
                            <ForwardRef
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "yes",
                                    "value": true,
                                  },
                                  Object {
                                    "label": "no",
                                    "value": false,
                                  },
                                ]
                              }
                              value={true}
                            >
                              <div
                                className="ant-radio-group ant-radio-group-outline"
                              >
                                <Radio
                                  checked={true}
                                  key="radio-group-value-options-true"
                                  prefixCls="ant-radio"
                                  type="radio"
                                  value={true}
                                >
                                  <label
                                    className="ant-radio-wrapper ant-radio-wrapper-checked"
                                  >
                                    <Checkbox
                                      checked={true}
                                      className=""
                                      defaultChecked={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      prefixCls="ant-radio"
                                      style={Object {}}
                                      type="radio"
                                      value={true}
                                    >
                                      <span
                                        className="ant-radio ant-radio-checked"
                                        style={Object {}}
                                      >
                                        <input
                                          checked={true}
                                          className="ant-radio-input"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          type="radio"
                                          value={true}
                                        />
                                        <span
                                          className="ant-radio-inner"
                                        />
                                      </span>
                                    </Checkbox>
                                    <span>
                                      yes
                                    </span>
                                  </label>
                                </Radio>
                                <Radio
                                  checked={false}
                                  key="radio-group-value-options-false"
                                  prefixCls="ant-radio"
                                  type="radio"
                                  value={false}
                                >
                                  <label
                                    className="ant-radio-wrapper"
                                  >
                                    <Checkbox
                                      checked={false}
                                      className=""
                                      defaultChecked={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      prefixCls="ant-radio"
                                      style={Object {}}
                                      type="radio"
                                      value={false}
                                    >
                                      <span
                                        className="ant-radio"
                                        style={Object {}}
                                      >
                                        <input
                                          checked={false}
                                          className="ant-radio-input"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          type="radio"
                                          value={false}
                                        />
                                        <span
                                          className="ant-radio-inner"
                                        />
                                      </span>
                                    </Checkbox>
                                    <span>
                                      no
                                    </span>
                                  </label>
                                </Radio>
                              </div>
                            </ForwardRef>
                          </Field>
                        </Component>
                      </Component>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="availability"
    label="Is it there?"
    name="availability"
    required={true}
  >
    <Field
      name="availability"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="availability"
        label="Is it there?"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-with-help"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="availability"
              label="Is it there?"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Is it there?"
                  >
                    Is it there?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="availability"
              label="Is it there?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="availability"
                        placeholder="Input.TextArea"
                      >
                        <Component
                          name="availability"
                        >
                          <Field
                            name="availability"
                          >
                            <TextArea
                              name="availability"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Input.TextArea"
                              value="Is available"
                            >
                              <div
                                className="ant-input-textarea"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="availability"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value="Is available"
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="availability"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Input.TextArea"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  value="Is available"
                                >
                                  <TextArea
                                    className=""
                                    name="availability"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Input.TextArea"
                                    prefixCls="ant-input"
                                    value="Is available"
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="availability"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value="Is available"
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="availability"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Input.TextArea"
                                          style={Object {}}
                                          value="Is available"
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </div>
                            </TextArea>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="condition"
    label="Is it in good condition?"
    name="condition"
  >
    <Field
      name="condition"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="condition"
        label="Is it in good condition?"
      >
        <Row
          className="ant-form-item"
          key="row"
        >
          <div
            className="ant-row ant-form-item"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="condition"
              label="Is it in good condition?"
              prefixCls="ant-form"
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className=""
                    title="Is it in good condition?"
                  >
                    Is it in good condition?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="condition"
              label="Is it in good condition?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="condition"
                        placeholder="Input.TextArea"
                      >
                        <Component
                          name="condition"
                        >
                          <Field
                            name="condition"
                          >
                            <TextArea
                              name="condition"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Input.TextArea"
                              value="MotorCycle"
                            >
                              <div
                                className="ant-input-textarea"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="condition"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value="MotorCycle"
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="condition"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Input.TextArea"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  value="MotorCycle"
                                >
                                  <TextArea
                                    className=""
                                    name="condition"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Input.TextArea"
                                    prefixCls="ant-input"
                                    value="MotorCycle"
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="condition"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value="MotorCycle"
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="condition"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Input.TextArea"
                                          style={Object {}}
                                          value="MotorCycle"
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </div>
                            </TextArea>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="appropriateUsage"
    label="Is it being used appropriately?"
    name="appropriateUsage"
  >
    <Field
      name="appropriateUsage"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="appropriateUsage"
        label="Is it being used appropriately?"
      >
        <Row
          className="ant-form-item"
          key="row"
        >
          <div
            className="ant-row ant-form-item"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="appropriateUsage"
              label="Is it being used appropriately?"
              prefixCls="ant-form"
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className=""
                    title="Is it being used appropriately?"
                  >
                    Is it being used appropriately?
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="appropriateUsage"
              label="Is it being used appropriately?"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <ForwardRef
                        name="appropriateUsage"
                        placeholder="Input.TextArea"
                      >
                        <Component
                          name="appropriateUsage"
                        >
                          <Field
                            name="appropriateUsage"
                          >
                            <TextArea
                              name="appropriateUsage"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Input.TextArea"
                              value="MotorCycle"
                            >
                              <div
                                className="ant-input-textarea"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="appropriateUsage"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value="MotorCycle"
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="appropriateUsage"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Input.TextArea"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  value="MotorCycle"
                                >
                                  <TextArea
                                    className=""
                                    name="appropriateUsage"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Input.TextArea"
                                    prefixCls="ant-input"
                                    value="MotorCycle"
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="appropriateUsage"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Input.TextArea"
                                      prefixCls="ant-input"
                                      value="MotorCycle"
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="appropriateUsage"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Input.TextArea"
                                          style={Object {}}
                                          value="MotorCycle"
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </div>
                            </TextArea>
                          </Field>
                        </Component>
                      </ForwardRef>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="accountabilityPeriod"
    label="Accountability period (in months)"
    name="accountabilityPeriod"
    required={true}
  >
    <Field
      name="accountabilityPeriod"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="accountabilityPeriod"
        label="Accountability period (in months)"
        required={true}
      >
        <Row
          className="ant-form-item ant-form-item-with-help"
          key="row"
        >
          <div
            className="ant-row ant-form-item ant-form-item-with-help"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="accountabilityPeriod"
              label="Accountability period (in months)"
              prefixCls="ant-form"
              required={true}
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className="ant-form-item-required"
                    title="Accountability period (in months)"
                  >
                    Accountability period (in months)
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="accountabilityPeriod"
              label="Accountability period (in months)"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              required={true}
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <Component
                        min={0}
                        name="accountabilityPeriod"
                      >
                        <Component
                          name="accountabilityPeriod"
                        >
                          <Field
                            name="accountabilityPeriod"
                          >
                            <ForwardRef
                              min={0}
                              name="accountabilityPeriod"
                              onBlur={[Function]}
                              onChange={[Function]}
                              step={1}
                              value={6}
                            >
                              <InputNumber
                                autoComplete="off"
                                className=""
                                downHandler={
                                  <ForwardRef(DownOutlined)
                                    className="ant-input-number-handler-down-inner"
                                  />
                                }
                                focusOnUpDown={true}
                                max={9007199254740991}
                                min={0}
                                name="accountabilityPeriod"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onPressEnter={[Function]}
                                parser={[Function]}
                                prefixCls="ant-input-number"
                                required={false}
                                step={1}
                                style={Object {}}
                                upHandler={
                                  <ForwardRef(UpOutlined)
                                    className="ant-input-number-handler-up-inner"
                                  />
                                }
                                useTouch={false}
                                value={6}
                              >
                                <div
                                  className="ant-input-number"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-input-number-handler-wrap"
                                  >
                                    <span
                                      aria-label="Increase Value"
                                      className="ant-input-number-handler ant-input-number-handler-up"
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      role="button"
                                      unselectable="on"
                                    >
                                      <ForwardRef(UpOutlined)
                                        className="ant-input-number-handler-up-inner"
                                      >
                                        <AntdIcon
                                          className="ant-input-number-handler-up-inner"
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "up",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <span
                                            aria-label="up"
                                            className="anticon anticon-up ant-input-number-handler-up-inner"
                                            role="img"
                                          >
                                            <IconReact
                                              className=""
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "up",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="up"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-up"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                  key="svg-up-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(UpOutlined)>
                                    </span>
                                    <span
                                      aria-label="Decrease Value"
                                      className="ant-input-number-handler ant-input-number-handler-down"
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      role="button"
                                      unselectable="on"
                                    >
                                      <ForwardRef(DownOutlined)
                                        className="ant-input-number-handler-down-inner"
                                      >
                                        <AntdIcon
                                          className="ant-input-number-handler-down-inner"
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "down",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <span
                                            aria-label="down"
                                            className="anticon anticon-down ant-input-number-handler-down-inner"
                                            role="img"
                                          >
                                            <IconReact
                                              className=""
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "down",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="down"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-down"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                  key="svg-down-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(DownOutlined)>
                                    </span>
                                  </div>
                                  <div
                                    className="ant-input-number-input-wrap"
                                  >
                                    <input
                                      aria-valuemax={9007199254740991}
                                      aria-valuemin={0}
                                      aria-valuenow={6}
                                      autoComplete="off"
                                      className="ant-input-number-input"
                                      max={9007199254740991}
                                      min={0}
                                      name="accountabilityPeriod"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseUp={[Function]}
                                      required={false}
                                      role="spinbutton"
                                      step={1}
                                      value="6"
                                    />
                                  </div>
                                </div>
                              </InputNumber>
                            </ForwardRef>
                          </Field>
                        </Component>
                      </Component>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-form-item-explain ant-form-item-explain-error"
                          key="help"
                        >
                          <div
                            key="0"
                            role="alert"
                          >
                            <li>
                              Required
                            </li>
                          </div>
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="productPhoto"
    label="Photo of the product"
    name="productPhoto"
  >
    <Field
      name="productPhoto"
    >
      <FormItem
        hasFeedback={true}
        help={false}
        id="productPhoto"
        label="Photo of the product"
      >
        <Row
          className="ant-form-item"
          key="row"
        >
          <div
            className="ant-row ant-form-item"
            style={Object {}}
          >
            <FormItemLabel
              hasFeedback={true}
              help={false}
              id="productPhoto"
              label="Photo of the product"
              prefixCls="ant-form"
              requiredMark={true}
            >
              <Col
                className="ant-form-item-label"
                sm={
                  Object {
                    "span": 5,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-5"
                  style={Object {}}
                >
                  <label
                    className=""
                    title="Photo of the product"
                  >
                    Photo of the product
                  </label>
                </div>
              </Col>
            </FormItemLabel>
            <FormItemInput
              errors={Array []}
              hasFeedback={true}
              help={false}
              id="productPhoto"
              label="Photo of the product"
              onDomErrorVisibleChange={[Function]}
              prefixCls="ant-form"
              status=""
              validateStatus=""
            >
              <Col
                className="ant-form-item-control"
                sm={
                  Object {
                    "span": 12,
                  }
                }
                xs={
                  Object {
                    "span": 24,
                  }
                }
              >
                <div
                  className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-12"
                  style={Object {}}
                >
                  <div
                    className="ant-form-item-control-input"
                  >
                    <div
                      className="ant-form-item-control-input-content"
                    >
                      <Upload
                        accept="image/*"
                        action=""
                        beforeUpload={[Function]}
                        className=""
                        customRequest={[Function]}
                        data={Object {}}
                        disabled={false}
                        listType="picture-card"
                        multiple={false}
                        name="productPhoto"
                        onChange={[Function]}
                        showUploadList={false}
                        supportServerRender={true}
                        type="select"
                      >
                        <span
                          className="ant-upload-picture-card-wrapper"
                        >
                          <div
                            className="ant-upload ant-upload-select ant-upload-select-picture-card"
                          >
                            <Upload
                              accept="image/*"
                              action=""
                              beforeUpload={[Function]}
                              component="span"
                              customRequest={[Function]}
                              data={Object {}}
                              disabled={false}
                              headers={Object {}}
                              listType="picture-card"
                              multipart={false}
                              multiple={false}
                              name="productPhoto"
                              onChange={[Function]}
                              onError={[Function]}
                              onProgress={[Function]}
                              onStart={[Function]}
                              onSuccess={[Function]}
                              openFileDialogOnClick={true}
                              prefixCls="ant-upload"
                              showUploadList={false}
                              supportServerRender={true}
                              type="select"
                              withCredentials={false}
                            >
                              <AjaxUploader
                                accept="image/*"
                                action=""
                                beforeUpload={[Function]}
                                component="span"
                                customRequest={[Function]}
                                data={Object {}}
                                disabled={false}
                                headers={Object {}}
                                listType="picture-card"
                                multipart={false}
                                multiple={false}
                                name="productPhoto"
                                onChange={[Function]}
                                onError={[Function]}
                                onProgress={[Function]}
                                onStart={[Function]}
                                onSuccess={[Function]}
                                openFileDialogOnClick={true}
                                prefixCls="ant-upload"
                                showUploadList={false}
                                supportServerRender={true}
                                type="select"
                                withCredentials={false}
                              >
                                <span
                                  className="ant-upload"
                                  onClick={[Function]}
                                  onDragOver={[Function]}
                                  onDrop={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                  tabIndex="0"
                                >
                                  <input
                                    accept="image/*"
                                    key="rc-upload-1605170760460-2"
                                    multiple={false}
                                    onChange={[Function]}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "display": "none",
                                      }
                                    }
                                    type="file"
                                  />
                                  <div
                                    className="upload-button"
                                  >
                                    <ForwardRef(PlusOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {},
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {},
                                                      "tag": "style",
                                                    },
                                                  ],
                                                  "tag": "defs",
                                                },
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                  },
                                                  "tag": "path",
                                                },
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "plus",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="plus"
                                          className="anticon anticon-plus"
                                          role="img"
                                        >
                                          <IconReact
                                            className=""
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {},
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {},
                                                          "tag": "style",
                                                        },
                                                      ],
                                                      "tag": "defs",
                                                    },
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "plus",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className=""
                                              data-icon="plus"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-plus"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <defs
                                                key="svg-plus-svg-0"
                                              >
                                                <style
                                                  key="svg-plus-svg-0-defs-0"
                                                />
                                              </defs>
                                              <path
                                                d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                                                key="svg-plus-svg-1"
                                              />
                                              <path
                                                d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                                                key="svg-plus-svg-2"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(PlusOutlined)>
                                    <div
                                      style={
                                        Object {
                                          "marginTop": 8,
                                        }
                                      }
                                    >
                                      Upload
                                    </div>
                                  </div>
                                </span>
                              </AjaxUploader>
                            </Upload>
                          </div>
                        </span>
                      </Upload>
                    </div>
                  </div>
                  <ErrorList
                    errors={Array []}
                    help={false}
                    onDomErrorVisibleChange={[Function]}
                  >
                    <CSSMotion
                      motionAppear={true}
                      motionDeadline={500}
                      motionName="show-help"
                      onLeaveEnd={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    >
                      <DomWrapper />
                    </CSSMotion>
                  </ErrorList>
                </div>
              </Col>
            </FormItemInput>
          </div>
        </Row>
      </FormItem>
    </Field>
  </Component>
  <Component
    id="submit"
  >
    <Field>
      <Button
        block={false}
        disabled={false}
        ghost={false}
        htmlType="submit"
        id="submit"
        loading={true}
        type="primary"
      >
        <Wave>
          <button
            className="ant-btn ant-btn-primary ant-btn-loading"
            disabled={false}
            id="submit"
            onClick={[Function]}
            type="submit"
          >
            <LoadingIcon
              existIcon={false}
              loading={true}
              prefixCls="ant-btn"
            >
              <CSSMotion
                motionName="ant-btn-loading-icon-motion"
                onAppearActive={[Function]}
                onAppearStart={[Function]}
                onEnterActive={[Function]}
                onEnterStart={[Function]}
                onLeaveActive={[Function]}
                onLeaveStart={[Function]}
                removeOnLeave={true}
                visible={true}
              >
                <DomWrapper>
                  <span
                    className="ant-btn-loading-icon"
                  >
                    <ForwardRef(LoadingOutlined)
                      className=""
                    >
                      <AntdIcon
                        className=""
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "loading",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="loading"
                          className="anticon anticon-loading"
                          role="img"
                        >
                          <IconReact
                            className="anticon-spin"
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "loading",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              className="anticon-spin"
                              data-icon="loading"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-loading"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
                                key="svg-loading-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(LoadingOutlined)>
                  </span>
                </DomWrapper>
              </CSSMotion>
            </LoadingIcon>
            <span
              key=".0"
            >
              Submit
            </span>
          </button>
        </Wave>
      </Button>
    </Field>
  </Component>
</form>
`;

exports[`productForm validation works: isAttractive 1`] = `undefined`;

exports[`productForm validation works: material number 1`] = `undefined`;
