// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateEditProduct Page missing product for detail view: View details 1`] = `null`;

exports[`CreateEditProduct Page renders correctly with detailView: View details 1`] = `null`;

exports[`CreateEditProduct Page renders correctly: table rows 0 1`] = `
<tr>
  <Cell
    additionalProps={
      Object {
        "className": "ant-table-column-has-sorters",
        "onClick": [Function],
      }
    }
    className="ant-table-column-sort"
    colEnd={0}
    colSpan={1}
    colStart={0}
    column={
      Object {
        "className": "ant-table-column-sort",
        "dataIndex": "productName",
        "defaultSortOrder": "descend",
        "key": "product-catalogue-productName",
        "onHeaderCell": [Function],
        "sorter": [Function],
        "title": <ForwardRef
          arrowPointAtCenter={false}
          autoAdjustOverflow={true}
          mouseEnterDelay={0.1}
          mouseLeaveDelay={0.1}
          placement="top"
          title="Click to cancel sort"
          transitionName="zoom-big-fast"
        >
          <div
            className="ant-table-column-sorters-with-tooltip"
          >
            <div
              className="ant-table-column-sorters"
            >
              <span>
                Product Name
              </span>
              <span
                className="ant-table-column-sorter ant-table-column-sorter-full"
              >
                <span
                  className="ant-table-column-sorter-inner"
                >
                  <ForwardRef(CaretUpOutlined)
                    className="ant-table-column-sorter-up"
                  />
                  <ForwardRef(CaretDownOutlined)
                    className="ant-table-column-sorter-down active"
                  />
                </span>
              </span>
            </div>
          </div>
        </ForwardRef>,
      }
    }
    component="th"
    firstFixLeft={false}
    firstFixRight={false}
    key="product-catalogue-productName"
    lastFixLeft={false}
    lastFixRight={false}
    prefixCls="ant-table"
    rowSpan={1}
    rowType="header"
  >
    <th
      className="ant-table-cell ant-table-column-sort ant-table-column-has-sorters"
      colSpan={null}
      onClick={[Function]}
      rowSpan={null}
      style={Object {}}
    >
      <Tooltip
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        placement="top"
        title="Click to cancel sort"
        transitionName="zoom-big-fast"
      >
        <ForwardRef(Tooltip)
          arrowContent={
            <span
              className="ant-tooltip-arrow-content"
            />
          }
          arrowPointAtCenter={false}
          autoAdjustOverflow={true}
          builtinPlacements={
            Object {
              "bottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tc",
                  "bc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomLeft": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomRight": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "left": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "cr",
                  "cl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "leftBottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "leftTop": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "right": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "cl",
                  "cr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "rightBottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "rightTop": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "top": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bc",
                  "tc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topLeft": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topRight": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
            }
          }
          mouseEnterDelay={0.1}
          mouseLeaveDelay={0.1}
          onPopupAlign={[Function]}
          onVisibleChange={[Function]}
          overlay="Click to cancel sort"
          overlayClassName=""
          placement="top"
          prefixCls="ant-tooltip"
          title="Click to cancel sort"
          transitionName="zoom-big-fast"
          visible={false}
        >
          <Trigger
            action={
              Array [
                "hover",
              ]
            }
            afterPopupVisibleChange={[Function]}
            arrowContent={
              <span
                className="ant-tooltip-arrow-content"
              />
            }
            arrowPointAtCenter={false}
            autoAdjustOverflow={true}
            autoDestroy={false}
            blurDelay={0.15}
            builtinPlacements={
              Object {
                "bottom": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tc",
                    "bc",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "bottomLeft": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tl",
                    "bl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "bottomRight": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tr",
                    "br",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "left": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    -4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "cr",
                    "cl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "leftBottom": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    -4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "br",
                    "bl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "leftTop": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    -4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tr",
                    "tl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "right": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "cl",
                    "cr",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "rightBottom": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "bl",
                    "br",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "rightTop": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tl",
                    "tr",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "top": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    -4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "bc",
                    "tc",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "topLeft": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    -4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "bl",
                    "tl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "topRight": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    -4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "br",
                    "tr",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
              }
            }
            defaultPopupVisible={false}
            destroyPopupOnHide={false}
            focusDelay={0}
            getDocument={[Function]}
            getPopupClassNameFromAlign={[Function]}
            hideAction={Array []}
            mask={false}
            maskClosable={true}
            mouseEnterDelay={0.1}
            mouseLeaveDelay={0.1}
            onPopupAlign={[Function]}
            onPopupVisibleChange={[Function]}
            overlay="Click to cancel sort"
            popup={[Function]}
            popupAlign={Object {}}
            popupClassName=""
            popupPlacement="top"
            popupStyle={Object {}}
            popupTransitionName="zoom-big-fast"
            popupVisible={false}
            prefixCls="ant-tooltip"
            showAction={Array []}
            title="Click to cancel sort"
            visible={false}
          >
            <div
              className="ant-table-column-sorters-with-tooltip"
              key="trigger"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <div
                className="ant-table-column-sorters"
              >
                <span>
                  Product Name
                </span>
                <span
                  className="ant-table-column-sorter ant-table-column-sorter-full"
                >
                  <span
                    className="ant-table-column-sorter-inner"
                  >
                    <ForwardRef(CaretUpOutlined)
                      className="ant-table-column-sorter-up"
                    >
                      <AntdIcon
                        className="ant-table-column-sorter-up"
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "caret-up",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="caret-up"
                          className="anticon anticon-caret-up ant-table-column-sorter-up"
                          role="img"
                        >
                          <IconReact
                            className=""
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "caret-up",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              className=""
                              data-icon="caret-up"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-caret-up"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z"
                                key="svg-caret-up-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(CaretUpOutlined)>
                    <ForwardRef(CaretDownOutlined)
                      className="ant-table-column-sorter-down active"
                    >
                      <AntdIcon
                        className="ant-table-column-sorter-down active"
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "0 0 1024 1024",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "caret-down",
                            "theme": "outlined",
                          }
                        }
                      >
                        <span
                          aria-label="caret-down"
                          className="anticon anticon-caret-down ant-table-column-sorter-down active"
                          role="img"
                        >
                          <IconReact
                            className=""
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "0 0 1024 1024",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "caret-down",
                                "theme": "outlined",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              className=""
                              data-icon="caret-down"
                              fill="currentColor"
                              focusable="false"
                              height="1em"
                              key="svg-caret-down"
                              viewBox="0 0 1024 1024"
                              width="1em"
                            >
                              <path
                                d="M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"
                                key="svg-caret-down-svg-0"
                              />
                            </svg>
                          </IconReact>
                        </span>
                      </AntdIcon>
                    </ForwardRef(CaretDownOutlined)>
                  </span>
                </span>
              </div>
            </div>
          </Trigger>
        </ForwardRef(Tooltip)>
      </Tooltip>
    </th>
  </Cell>
  <Cell
    className=""
    colEnd={1}
    colSpan={1}
    colStart={1}
    column={
      Object {
        "dataIndex": "uniqueId",
        "key": "product-catalogue-uniqueId",
        "title": "ID",
      }
    }
    component="th"
    firstFixLeft={false}
    firstFixRight={false}
    key="product-catalogue-uniqueId"
    lastFixLeft={false}
    lastFixRight={false}
    prefixCls="ant-table"
    rowSpan={1}
    rowType="header"
  >
    <th
      className="ant-table-cell"
      colSpan={null}
      rowSpan={null}
      style={Object {}}
    >
      ID
    </th>
  </Cell>
  <Cell
    className=""
    colEnd={2}
    colSpan={1}
    colStart={2}
    column={
      Object {
        "key": "product-catalogue-actions",
        "render": [Function],
        "title": "Actions",
      }
    }
    component="th"
    firstFixLeft={false}
    firstFixRight={false}
    key="product-catalogue-actions"
    lastFixLeft={false}
    lastFixRight={false}
    prefixCls="ant-table"
    rowSpan={1}
    rowType="header"
  >
    <th
      className="ant-table-cell"
      colSpan={null}
      rowSpan={null}
      style={Object {}}
    >
      Actions
    </th>
  </Cell>
</tr>
`;

exports[`CreateEditProduct Page renders correctly: table rows 1 1`] = `
<tr
  className="ant-table-placeholder"
  style={
    Object {
      "display": null,
    }
  }
>
  <Cell
    colSpan={3}
    component="td"
    prefixCls="ant-table"
  >
    <td
      className="ant-table-cell"
      colSpan={3}
      rowSpan={null}
      style={Object {}}
    >
      <Empty
        image={<Simple />}
      >
        <LocaleReceiver
          componentName="Empty"
        >
          <div
            className="ant-empty ant-empty-normal"
          >
            <div
              className="ant-empty-image"
            >
              <Simple>
                <svg
                  className="ant-empty-img-simple"
                  height="41"
                  viewBox="0 0 64 41"
                  width="64"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g
                    fill="none"
                    fillRule="evenodd"
                    transform="translate(0 1)"
                  >
                    <ellipse
                      className="ant-empty-img-simple-ellipse"
                      cx="32"
                      cy="33"
                      rx="32"
                      ry="7"
                    />
                    <g
                      className="ant-empty-img-simple-g"
                      fillRule="nonzero"
                    >
                      <path
                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                      />
                      <path
                        className="ant-empty-img-simple-path"
                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                      />
                    </g>
                  </g>
                </svg>
              </Simple>
            </div>
            <p
              className="ant-empty-description"
            >
              No Data
            </p>
          </div>
        </LocaleReceiver>
      </Empty>
    </td>
  </Cell>
</tr>
`;
