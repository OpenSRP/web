// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationForm editing service types works: full snapshot 1`] = `
<ForwardRef(Form)
  className="ant-form ant-form-horizontal"
  form={
    Object {
      "__INTERNAL__": Object {
        "itemRef": [Function],
        "name": undefined,
      },
      "getFieldError": [Function],
      "getFieldInstance": [Function],
      "getFieldValue": [Function],
      "getFieldsError": [Function],
      "getFieldsValue": [Function],
      "getInternalHooks": [Function],
      "isFieldTouched": [Function],
      "isFieldValidating": [Function],
      "isFieldsTouched": [Function],
      "isFieldsValidating": [Function],
      "resetFields": [Function],
      "scrollToField": [Function],
      "setFields": [Function],
      "setFieldsValue": [Function],
      "submit": [Function],
      "validateFields": [Function],
    }
  }
  onFinishFailed={[Function]}
  onReset={[Function]}
  onSubmitCapture={[Function]}
>
  <form
    className="ant-form ant-form-horizontal"
    onReset={[Function]}
    onSubmit={[Function]}
    onSubmitCapture={[Function]}
  >
    <Component />
    <Component
      hidden={true}
      id="instance"
      label="Instance"
      name="instance"
      required={true}
    >
      <Field
        name="instance"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={true}
          id="instance"
          label="Instance"
          required={true}
        >
          <Row
            className="ant-form-item ant-form-item-hidden"
            key="row"
          >
            <div
              className="ant-row ant-form-item ant-form-item-hidden"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={true}
                id="instance"
                label="Instance"
                prefixCls="ant-form"
                required={true}
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required ant-form-item-required-mark-optional"
                      title="Instance"
                    >
                      Instance
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={true}
                id="instance"
                label="Instance"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                required={true}
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <ForwardRef
                          name="instance"
                        >
                          <Component
                            name="instance"
                          >
                            <Field
                              name="instance"
                            >
                              <Input
                                name="instance"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                                value="eusm"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <input
                                      className="ant-input"
                                      name="instance"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      type="text"
                                      value="eusm"
                                    />
                                  }
                                  focused={false}
                                  handleReset={[Function]}
                                  inputType="input"
                                  name="instance"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  type="text"
                                  value="eusm"
                                >
                                  <input
                                    className="ant-input"
                                    name="instance"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    type="text"
                                    value="eusm"
                                  />
                                </ClearableLabeledInput>
                              </Input>
                            </Field>
                          </Component>
                        </ForwardRef>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="parentId"
      label="Parent"
      name="parentId"
      required={true}
    >
      <Field
        name="parentId"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="parentId"
          label="Parent"
          required={true}
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="parentId"
                label="Parent"
                prefixCls="ant-form"
                required={true}
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required ant-form-item-required-mark-optional"
                      title="Parent"
                    >
                      Parent
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="parentId"
                label="Parent"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                required={true}
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <Component
                          dropdownStyle={
                            Object {
                              "maxHeight": 400,
                              "overflow": "auto",
                            }
                          }
                          name="parentId"
                          placeholder="Please select"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <Component
                            name="parentId"
                          >
                            <Field
                              name="parentId"
                            >
                              <ForwardRef(InternalTreeSelect)
                                dropdownStyle={
                                  Object {
                                    "maxHeight": 400,
                                    "overflow": "auto",
                                  }
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Please select"
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                                value="de1a355f-4408-452c-a7ed-4f77ca855981"
                              >
                                <TreeSelect
                                  choiceTransitionName=""
                                  className="ant-tree-select"
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  dropdownClassName="ant-tree-select-dropdown"
                                  dropdownStyle={
                                    Object {
                                      "maxHeight": 400,
                                      "overflow": "auto",
                                    }
                                  }
                                  inputIcon={[Function]}
                                  listHeight={256}
                                  listItemHeight={26}
                                  menuItemSelectedIcon={null}
                                  notFoundContent={
                                    <Context.Consumer>
                                      [Function]
                                    </Context.Consumer>
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Please select"
                                  prefixCls="ant-select"
                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                  showTreeIcon={false}
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                  switcherIcon={[Function]}
                                  transitionName="slide-up"
                                  treeMotion={null}
                                  value="de1a355f-4408-452c-a7ed-4f77ca855981"
                                >
                                  <ForwardRef
                                    choiceTransitionName=""
                                    className="ant-tree-select"
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    dropdownClassName="ant-tree-select-dropdown"
                                    dropdownStyle={
                                      Object {
                                        "maxHeight": 400,
                                        "overflow": "auto",
                                      }
                                    }
                                    inputIcon={[Function]}
                                    listHeight={256}
                                    listItemHeight={26}
                                    menuItemSelectedIcon={null}
                                    notFoundContent={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Please select"
                                    prefixCls="ant-select"
                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                    showTreeIcon={false}
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                    switcherIcon={[Function]}
                                    transitionName="slide-up"
                                    treeMotion={null}
                                    value="de1a355f-4408-452c-a7ed-4f77ca855981"
                                  >
                                    <Select
                                      choiceTransitionName=""
                                      className="ant-tree-select"
                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                      dropdownClassName="ant-tree-select-dropdown"
                                      dropdownStyle={
                                        Object {
                                          "maxHeight": 400,
                                          "overflow": "auto",
                                        }
                                      }
                                      inputIcon={[Function]}
                                      internalProps={
                                        Object {
                                          "mark": "RC_SELECT_INTERNAL_PROPS_MARK",
                                          "onClear": [Function],
                                          "onRawDeselect": [Function],
                                          "onRawSelect": [Function],
                                          "skipTriggerChange": true,
                                          "skipTriggerSelect": true,
                                        }
                                      }
                                      labelInValue={true}
                                      listHeight={256}
                                      listItemHeight={26}
                                      menuItemSelectedIcon={null}
                                      mode={null}
                                      notFoundContent={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      onBlur={[Function]}
                                      onChange={null}
                                      onDeselect={null}
                                      onDropdownVisibleChange={[Function]}
                                      onSelect={null}
                                      optionFilterProp="value"
                                      optionLabelProp={null}
                                      options={Array []}
                                      placeholder="Please select"
                                      prefixCls="ant-select"
                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                      showTreeIcon={false}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      switcherIcon={[Function]}
                                      transitionName="slide-up"
                                      treeMotion={null}
                                      value={
                                        Array [
                                          Object {
                                            "label": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                            "value": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                          },
                                        ]
                                      }
                                    >
                                      <div
                                        className="ant-select ant-tree-select ant-select-single ant-select-show-arrow"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <SelectTrigger
                                          containerWidth={null}
                                          dropdownClassName="ant-tree-select-dropdown"
                                          dropdownStyle={
                                            Object {
                                              "maxHeight": 400,
                                              "overflow": "auto",
                                            }
                                          }
                                          empty={true}
                                          getTriggerDOMNode={[Function]}
                                          popupElement={
                                            <OptionList
                                              childrenAsData={false}
                                              defaultActiveFirstOption={true}
                                              flattenOptions={Array []}
                                              height={256}
                                              id="rc_select_TEST_OR_SSR"
                                              itemHeight={26}
                                              menuItemSelectedIcon={null}
                                              multiple={false}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onActiveValue={[Function]}
                                              onMouseEnter={[Function]}
                                              onSelect={[Function]}
                                              onToggleOpen={[Function]}
                                              options={Array []}
                                              prefixCls="ant-select"
                                              searchValue=""
                                              values={
                                                Set {
                                                  "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                }
                                              }
                                              virtual={true}
                                            />
                                          }
                                          prefixCls="ant-select"
                                          transitionName="slide-up"
                                        >
                                          <Trigger
                                            action={Array []}
                                            afterPopupVisibleChange={[Function]}
                                            autoDestroy={false}
                                            blurDelay={0.15}
                                            builtinPlacements={
                                              Object {
                                                "bottomLeft": Object {
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "bl",
                                                  ],
                                                },
                                                "bottomRight": Object {
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "br",
                                                  ],
                                                },
                                                "topLeft": Object {
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "tl",
                                                  ],
                                                },
                                                "topRight": Object {
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "tr",
                                                  ],
                                                },
                                              }
                                            }
                                            defaultPopupVisible={false}
                                            destroyPopupOnHide={false}
                                            focusDelay={0}
                                            getDocument={[Function]}
                                            getPopupClassNameFromAlign={[Function]}
                                            getTriggerDOMNode={[Function]}
                                            hideAction={Array []}
                                            mask={false}
                                            maskClosable={true}
                                            mouseEnterDelay={0}
                                            mouseLeaveDelay={0.1}
                                            onPopupAlign={[Function]}
                                            onPopupVisibleChange={[Function]}
                                            popup={
                                              <div>
                                                <OptionList
                                                  childrenAsData={false}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={256}
                                                  id="rc_select_TEST_OR_SSR"
                                                  itemHeight={26}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={
                                                    Set {
                                                      "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                    }
                                                  }
                                                  virtual={true}
                                                />
                                              </div>
                                            }
                                            popupAlign={Object {}}
                                            popupClassName="ant-tree-select-dropdown ant-select-dropdown-empty"
                                            popupPlacement="bottomLeft"
                                            popupStyle={
                                              Object {
                                                "maxHeight": 400,
                                                "minWidth": null,
                                                "overflow": "auto",
                                                "width": null,
                                              }
                                            }
                                            popupTransitionName="slide-up"
                                            prefixCls="ant-select-dropdown"
                                            showAction={Array []}
                                          >
                                            <Selector
                                              accessibilityIndex={0}
                                              activeValue={null}
                                              choiceTransitionName=""
                                              className="ant-tree-select"
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              domRef={
                                                Object {
                                                  "current": <div
                                                    class="ant-select-selector"
                                                  >
                                                    <span
                                                      class="ant-select-selection-search"
                                                    >
                                                      <input
                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                        aria-autocomplete="list"
                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                        aria-haspopup="listbox"
                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                        autocomplete="off"
                                                        class="ant-select-selection-search-input"
                                                        id="rc_select_TEST_OR_SSR"
                                                        readonly=""
                                                        role="combobox"
                                                        style="opacity: 0;"
                                                        type="search"
                                                        unselectable="on"
                                                        value=""
                                                      />
                                                    </span>
                                                    <span
                                                      class="ant-select-selection-item"
                                                      title="de1a355f-4408-452c-a7ed-4f77ca855981"
                                                    >
                                                      de1a355f-4408-452c-a7ed-4f77ca855981
                                                    </span>
                                                  </div>,
                                                }
                                              }
                                              dropdownClassName="ant-tree-select-dropdown"
                                              dropdownStyle={
                                                Object {
                                                  "maxHeight": 400,
                                                  "overflow": "auto",
                                                }
                                              }
                                              id="rc_select_TEST_OR_SSR"
                                              inputElement={null}
                                              inputIcon={[Function]}
                                              internalProps={
                                                Object {
                                                  "mark": "RC_SELECT_INTERNAL_PROPS_MARK",
                                                  "onClear": [Function],
                                                  "onRawDeselect": [Function],
                                                  "onRawSelect": [Function],
                                                  "skipTriggerChange": true,
                                                  "skipTriggerSelect": true,
                                                }
                                              }
                                              key="trigger"
                                              labelInValue={true}
                                              listHeight={256}
                                              listItemHeight={26}
                                              menuItemSelectedIcon={null}
                                              mode={null}
                                              multiple={false}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onBlur={[Function]}
                                              onChange={null}
                                              onDeselect={null}
                                              onDropdownVisibleChange={[Function]}
                                              onSearch={[Function]}
                                              onSearchSubmit={[Function]}
                                              onSelect={[Function]}
                                              onToggleOpen={[Function]}
                                              optionFilterProp="value"
                                              optionLabelProp={null}
                                              options={Array []}
                                              placeholder="Please select"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              searchValue=""
                                              showSearch={false}
                                              showTreeIcon={false}
                                              style={
                                                Object {
                                                  "width": "100%",
                                                }
                                              }
                                              switcherIcon={[Function]}
                                              tokenWithEnter={false}
                                              transitionName="slide-up"
                                              treeMotion={null}
                                              value={
                                                Array [
                                                  Object {
                                                    "label": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                    "value": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                  },
                                                ]
                                              }
                                              values={
                                                Array [
                                                  Object {
                                                    "disabled": false,
                                                    "key": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                    "label": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                    "value": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                  },
                                                ]
                                              }
                                            >
                                              <div
                                                className="ant-select-selector"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SingleSelector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  choiceTransitionName=""
                                                  className="ant-tree-select"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-item"
                                                          title="de1a355f-4408-452c-a7ed-4f77ca855981"
                                                        >
                                                          de1a355f-4408-452c-a7ed-4f77ca855981
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName="ant-tree-select-dropdown"
                                                  dropdownStyle={
                                                    Object {
                                                      "maxHeight": 400,
                                                      "overflow": "auto",
                                                    }
                                                  }
                                                  id="rc_select_TEST_OR_SSR"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  inputRef={
                                                    Object {
                                                      "current": <input
                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                        aria-autocomplete="list"
                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                        aria-haspopup="listbox"
                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                        autocomplete="off"
                                                        class="ant-select-selection-search-input"
                                                        id="rc_select_TEST_OR_SSR"
                                                        readonly=""
                                                        role="combobox"
                                                        style="opacity: 0;"
                                                        type="search"
                                                        unselectable="on"
                                                        value=""
                                                      />,
                                                    }
                                                  }
                                                  internalProps={
                                                    Object {
                                                      "mark": "RC_SELECT_INTERNAL_PROPS_MARK",
                                                      "onClear": [Function],
                                                      "onRawDeselect": [Function],
                                                      "onRawSelect": [Function],
                                                      "skipTriggerChange": true,
                                                      "skipTriggerSelect": true,
                                                    }
                                                  }
                                                  labelInValue={true}
                                                  listHeight={256}
                                                  listItemHeight={26}
                                                  menuItemSelectedIcon={null}
                                                  mode={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onBlur={[Function]}
                                                  onChange={null}
                                                  onDeselect={null}
                                                  onDropdownVisibleChange={[Function]}
                                                  onInputChange={[Function]}
                                                  onInputCompositionEnd={[Function]}
                                                  onInputCompositionStart={[Function]}
                                                  onInputKeyDown={[Function]}
                                                  onInputMouseDown={[Function]}
                                                  onInputPaste={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  optionFilterProp="value"
                                                  optionLabelProp={null}
                                                  options={Array []}
                                                  placeholder="Please select"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={false}
                                                  showTreeIcon={false}
                                                  style={
                                                    Object {
                                                      "width": "100%",
                                                    }
                                                  }
                                                  switcherIcon={[Function]}
                                                  tokenWithEnter={false}
                                                  transitionName="slide-up"
                                                  treeMotion={null}
                                                  value={
                                                    Array [
                                                      Object {
                                                        "label": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                        "value": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                      },
                                                    ]
                                                  }
                                                  values={
                                                    Array [
                                                      Object {
                                                        "disabled": false,
                                                        "key": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                        "label": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                        "value": "de1a355f-4408-452c-a7ed-4f77ca855981",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <span
                                                    className="ant-select-selection-search"
                                                  >
                                                    <Input
                                                      accessibilityIndex={0}
                                                      attrs={Object {}}
                                                      editable={false}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      onChange={[Function]}
                                                      onCompositionEnd={[Function]}
                                                      onCompositionStart={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onPaste={[Function]}
                                                      prefixCls="ant-select"
                                                      value=""
                                                    >
                                                      <input
                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                        aria-autocomplete="list"
                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                        aria-haspopup="listbox"
                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                        autoComplete="off"
                                                        className="ant-select-selection-search-input"
                                                        id="rc_select_TEST_OR_SSR"
                                                        onChange={[Function]}
                                                        onCompositionEnd={[Function]}
                                                        onCompositionStart={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onPaste={[Function]}
                                                        readOnly={true}
                                                        role="combobox"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                          }
                                                        }
                                                        type="search"
                                                        unselectable="on"
                                                        value=""
                                                      />
                                                    </Input>
                                                  </span>
                                                  <span
                                                    className="ant-select-selection-item"
                                                    title="de1a355f-4408-452c-a7ed-4f77ca855981"
                                                  >
                                                    de1a355f-4408-452c-a7ed-4f77ca855981
                                                  </span>
                                                </SingleSelector>
                                              </div>
                                            </Selector>
                                          </Trigger>
                                        </SelectTrigger>
                                        <TransBtn
                                          className="ant-select-arrow"
                                          customizeIcon={[Function]}
                                          customizeIconProps={
                                            Object {
                                              "focused": false,
                                              "loading": undefined,
                                              "open": undefined,
                                              "searchValue": "",
                                              "showSearch": false,
                                            }
                                          }
                                        >
                                          <span
                                            aria-hidden={true}
                                            className="ant-select-arrow"
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "WebkitUserSelect": "none",
                                                "userSelect": "none",
                                              }
                                            }
                                            unselectable="on"
                                          >
                                            <ForwardRef(DownOutlined)
                                              className="ant-select-suffix"
                                            >
                                              <AntdIcon
                                                className="ant-select-suffix"
                                                icon={
                                                  Object {
                                                    "icon": Object {
                                                      "attrs": Object {
                                                        "focusable": "false",
                                                        "viewBox": "64 64 896 896",
                                                      },
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {
                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                          },
                                                          "tag": "path",
                                                        },
                                                      ],
                                                      "tag": "svg",
                                                    },
                                                    "name": "down",
                                                    "theme": "outlined",
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-label="down"
                                                  className="anticon anticon-down ant-select-suffix"
                                                  role="img"
                                                >
                                                  <IconReact
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      data-icon="down"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      key="svg-down"
                                                      viewBox="64 64 896 896"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                        key="svg-down-svg-0"
                                                      />
                                                    </svg>
                                                  </IconReact>
                                                </span>
                                              </AntdIcon>
                                            </ForwardRef(DownOutlined)>
                                          </span>
                                        </TransBtn>
                                      </div>
                                    </Select>
                                  </ForwardRef>
                                </TreeSelect>
                              </ForwardRef(InternalTreeSelect)>
                            </Field>
                          </Component>
                        </Component>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="name"
      label="Name"
      name="name"
      required={true}
    >
      <Field
        name="name"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="name"
          label="Name"
          required={true}
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="name"
                label="Name"
                prefixCls="ant-form"
                required={true}
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required ant-form-item-required-mark-optional"
                      title="Name"
                    >
                      Name
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="name"
                label="Name"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                required={true}
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <ForwardRef
                          name="name"
                          placeholder="Enter a location name"
                        >
                          <Component
                            name="name"
                          >
                            <Field
                              name="name"
                            >
                              <Input
                                name="name"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Enter a location name"
                                type="text"
                                value="Tunisia"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <input
                                      className="ant-input"
                                      name="name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Enter a location name"
                                      type="text"
                                      value="Tunisia"
                                    />
                                  }
                                  focused={false}
                                  handleReset={[Function]}
                                  inputType="input"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Enter a location name"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  type="text"
                                  value="Tunisia"
                                >
                                  <input
                                    className="ant-input"
                                    name="name"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder="Enter a location name"
                                    type="text"
                                    value="Tunisia"
                                  />
                                </ClearableLabeledInput>
                              </Input>
                            </Field>
                          </Component>
                        </ForwardRef>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="status"
      label="Status"
      name="status"
      required={true}
      valuePropName="checked"
    >
      <Field
        name="status"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="status"
          label="Status"
          required={true}
          valuePropName="checked"
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="status"
                label="Status"
                prefixCls="ant-form"
                required={true}
                requiredMark="optional"
                valuePropName="checked"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required ant-form-item-required-mark-optional"
                      title="Status"
                    >
                      Status
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="status"
                label="Status"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                required={true}
                status=""
                validateStatus=""
                valuePropName="checked"
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <Component
                          defaultValue="Active"
                          name="status"
                          options={
                            Array [
                              Object {
                                "label": "Active",
                                "value": "Active",
                              },
                              Object {
                                "label": "Inactive",
                                "value": "InActive",
                              },
                            ]
                          }
                        >
                          <Component
                            name="status"
                          >
                            <Field
                              name="status"
                            >
                              <ForwardRef
                                defaultValue="Active"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Active",
                                      "value": "Active",
                                    },
                                    Object {
                                      "label": "Inactive",
                                      "value": "InActive",
                                    },
                                  ]
                                }
                                value="Active"
                              >
                                <div
                                  className="ant-radio-group ant-radio-group-outline"
                                >
                                  <Radio
                                    checked={true}
                                    key="radio-group-value-options-Active"
                                    prefixCls="ant-radio"
                                    type="radio"
                                    value="Active"
                                  >
                                    <label
                                      className="ant-radio-wrapper ant-radio-wrapper-checked"
                                    >
                                      <Checkbox
                                        checked={true}
                                        className=""
                                        defaultChecked={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        prefixCls="ant-radio"
                                        style={Object {}}
                                        type="radio"
                                        value="Active"
                                      >
                                        <span
                                          className="ant-radio ant-radio-checked"
                                          style={Object {}}
                                        >
                                          <input
                                            checked={true}
                                            className="ant-radio-input"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            type="radio"
                                            value="Active"
                                          />
                                          <span
                                            className="ant-radio-inner"
                                          />
                                        </span>
                                      </Checkbox>
                                      <span>
                                        Active
                                      </span>
                                    </label>
                                  </Radio>
                                  <Radio
                                    checked={false}
                                    key="radio-group-value-options-InActive"
                                    prefixCls="ant-radio"
                                    type="radio"
                                    value="InActive"
                                  >
                                    <label
                                      className="ant-radio-wrapper"
                                    >
                                      <Checkbox
                                        checked={false}
                                        className=""
                                        defaultChecked={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        prefixCls="ant-radio"
                                        style={Object {}}
                                        type="radio"
                                        value="InActive"
                                      >
                                        <span
                                          className="ant-radio"
                                          style={Object {}}
                                        >
                                          <input
                                            checked={false}
                                            className="ant-radio-input"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            type="radio"
                                            value="InActive"
                                          />
                                          <span
                                            className="ant-radio-inner"
                                          />
                                        </span>
                                      </Checkbox>
                                      <span>
                                        Inactive
                                      </span>
                                    </label>
                                  </Radio>
                                </div>
                              </ForwardRef>
                            </Field>
                          </Component>
                        </Component>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="type"
      label="Type"
      name="type"
      required={true}
    >
      <Field
        name="type"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="type"
          label="Type"
          required={true}
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="type"
                label="Type"
                prefixCls="ant-form"
                required={true}
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required ant-form-item-required-mark-optional"
                      title="Type"
                    >
                      Type
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="type"
                label="Type"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                required={true}
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <ForwardRef
                          name="type"
                          placeholder="Select type"
                        >
                          <Component
                            name="type"
                          >
                            <Field
                              name="type"
                            >
                              <Input
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Select type"
                                type="text"
                                value="Feature"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <input
                                      className="ant-input"
                                      name="type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Select type"
                                      type="text"
                                      value="Feature"
                                    />
                                  }
                                  focused={false}
                                  handleReset={[Function]}
                                  inputType="input"
                                  name="type"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Select type"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  type="text"
                                  value="Feature"
                                >
                                  <input
                                    className="ant-input"
                                    name="type"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder="Select type"
                                    type="text"
                                    value="Feature"
                                  />
                                </ClearableLabeledInput>
                              </Input>
                            </Field>
                          </Component>
                        </ForwardRef>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="serviceTypes"
      label="Type"
      name="serviceTypes"
      required={true}
    >
      <Field
        name="serviceTypes"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="serviceTypes"
          label="Type"
          required={true}
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="serviceTypes"
                label="Type"
                prefixCls="ant-form"
                required={true}
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required ant-form-item-required-mark-optional"
                      title="Type"
                    >
                      Type
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="serviceTypes"
                label="Type"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                required={true}
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <ServiceTypeSelect
                          baseURL="https://opensrp-stage.smartregister.org/opensrp/rest/"
                          name="serviceTypes"
                          service={[Function]}
                        >
                          <Component
                            loading={false}
                            name="serviceTypes"
                            options={
                              Array [
                                Object {
                                  "value": "School",
                                },
                                Object {
                                  "value": "Hospital",
                                },
                              ]
                            }
                          >
                            <Component
                              name="serviceTypes"
                            >
                              <Field
                                name="serviceTypes"
                              >
                                <ForwardRef(InternalSelect)
                                  loading={false}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "value": "School",
                                      },
                                      Object {
                                        "value": "Hospital",
                                      },
                                    ]
                                  }
                                  value={Array []}
                                >
                                  <Select
                                    className=""
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    dropdownClassName=""
                                    inputIcon={[Function]}
                                    listHeight={256}
                                    listItemHeight={24}
                                    loading={false}
                                    menuItemSelectedIcon={null}
                                    notFoundContent={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "value": "School",
                                        },
                                        Object {
                                          "value": "Hospital",
                                        },
                                      ]
                                    }
                                    prefixCls="ant-select"
                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                    transitionName="slide-up"
                                    value={Array []}
                                  >
                                    <ForwardRef(Select)
                                      className=""
                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                      dropdownClassName=""
                                      inputIcon={[Function]}
                                      listHeight={256}
                                      listItemHeight={24}
                                      loading={false}
                                      menuItemSelectedIcon={null}
                                      notFoundContent={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "value": "School",
                                          },
                                          Object {
                                            "value": "Hospital",
                                          },
                                        ]
                                      }
                                      prefixCls="ant-select"
                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                      transitionName="slide-up"
                                      value={Array []}
                                    >
                                      <div
                                        className="ant-select ant-select-single ant-select-show-arrow"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                      >
                                        <SelectTrigger
                                          containerWidth={null}
                                          dropdownClassName=""
                                          empty={false}
                                          getTriggerDOMNode={[Function]}
                                          popupElement={
                                            <OptionList
                                              childrenAsData={false}
                                              defaultActiveFirstOption={true}
                                              flattenOptions={
                                                Array [
                                                  Object {
                                                    "data": Object {
                                                      "value": "School",
                                                    },
                                                    "groupOption": false,
                                                    "key": "School",
                                                  },
                                                  Object {
                                                    "data": Object {
                                                      "value": "Hospital",
                                                    },
                                                    "groupOption": false,
                                                    "key": "Hospital",
                                                  },
                                                ]
                                              }
                                              height={256}
                                              id="rc_select_TEST_OR_SSR"
                                              itemHeight={24}
                                              menuItemSelectedIcon={null}
                                              multiple={false}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onActiveValue={[Function]}
                                              onMouseEnter={[Function]}
                                              onSelect={[Function]}
                                              onToggleOpen={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "value": "School",
                                                  },
                                                  Object {
                                                    "value": "Hospital",
                                                  },
                                                ]
                                              }
                                              prefixCls="ant-select"
                                              searchValue=""
                                              values={Set {}}
                                              virtual={true}
                                            />
                                          }
                                          prefixCls="ant-select"
                                          transitionName="slide-up"
                                        >
                                          <Trigger
                                            action={Array []}
                                            afterPopupVisibleChange={[Function]}
                                            autoDestroy={false}
                                            blurDelay={0.15}
                                            builtinPlacements={
                                              Object {
                                                "bottomLeft": Object {
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tl",
                                                    "bl",
                                                  ],
                                                },
                                                "bottomRight": Object {
                                                  "offset": Array [
                                                    0,
                                                    4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "tr",
                                                    "br",
                                                  ],
                                                },
                                                "topLeft": Object {
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "bl",
                                                    "tl",
                                                  ],
                                                },
                                                "topRight": Object {
                                                  "offset": Array [
                                                    0,
                                                    -4,
                                                  ],
                                                  "overflow": Object {
                                                    "adjustX": 0,
                                                    "adjustY": 1,
                                                  },
                                                  "points": Array [
                                                    "br",
                                                    "tr",
                                                  ],
                                                },
                                              }
                                            }
                                            defaultPopupVisible={false}
                                            destroyPopupOnHide={false}
                                            focusDelay={0}
                                            getDocument={[Function]}
                                            getPopupClassNameFromAlign={[Function]}
                                            getTriggerDOMNode={[Function]}
                                            hideAction={Array []}
                                            mask={false}
                                            maskClosable={true}
                                            mouseEnterDelay={0}
                                            mouseLeaveDelay={0.1}
                                            onPopupAlign={[Function]}
                                            onPopupVisibleChange={[Function]}
                                            popup={
                                              <div>
                                                <OptionList
                                                  childrenAsData={false}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={
                                                    Array [
                                                      Object {
                                                        "data": Object {
                                                          "value": "School",
                                                        },
                                                        "groupOption": false,
                                                        "key": "School",
                                                      },
                                                      Object {
                                                        "data": Object {
                                                          "value": "Hospital",
                                                        },
                                                        "groupOption": false,
                                                        "key": "Hospital",
                                                      },
                                                    ]
                                                  }
                                                  height={256}
                                                  id="rc_select_TEST_OR_SSR"
                                                  itemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "value": "School",
                                                      },
                                                      Object {
                                                        "value": "Hospital",
                                                      },
                                                    ]
                                                  }
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={Set {}}
                                                  virtual={true}
                                                />
                                              </div>
                                            }
                                            popupAlign={Object {}}
                                            popupClassName=""
                                            popupPlacement="bottomLeft"
                                            popupStyle={
                                              Object {
                                                "minWidth": null,
                                                "width": null,
                                              }
                                            }
                                            popupTransitionName="slide-up"
                                            prefixCls="ant-select-dropdown"
                                            showAction={Array []}
                                          >
                                            <Selector
                                              accessibilityIndex={0}
                                              activeValue={null}
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              domRef={
                                                Object {
                                                  "current": <div
                                                    class="ant-select-selector"
                                                  >
                                                    <span
                                                      class="ant-select-selection-search"
                                                    >
                                                      <input
                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                        aria-autocomplete="list"
                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                        aria-haspopup="listbox"
                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                        autocomplete="off"
                                                        class="ant-select-selection-search-input"
                                                        id="rc_select_TEST_OR_SSR"
                                                        readonly=""
                                                        role="combobox"
                                                        style="opacity: 0;"
                                                        type="search"
                                                        unselectable="on"
                                                        value=""
                                                      />
                                                    </span>
                                                    <span
                                                      class="ant-select-selection-placeholder"
                                                    />
                                                  </div>,
                                                }
                                              }
                                              dropdownClassName=""
                                              id="rc_select_TEST_OR_SSR"
                                              inputElement={null}
                                              inputIcon={[Function]}
                                              key="trigger"
                                              listHeight={256}
                                              listItemHeight={24}
                                              loading={false}
                                              menuItemSelectedIcon={null}
                                              multiple={false}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onSearch={[Function]}
                                              onSearchSubmit={[Function]}
                                              onSelect={[Function]}
                                              onToggleOpen={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "value": "School",
                                                  },
                                                  Object {
                                                    "value": "Hospital",
                                                  },
                                                ]
                                              }
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              searchValue=""
                                              showSearch={false}
                                              tokenWithEnter={false}
                                              transitionName="slide-up"
                                              value={Array []}
                                              values={Array []}
                                            >
                                              <div
                                                className="ant-select-selector"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SingleSelector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-placeholder"
                                                        />
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  id="rc_select_TEST_OR_SSR"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  inputRef={
                                                    Object {
                                                      "current": <input
                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                        aria-autocomplete="list"
                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                        aria-haspopup="listbox"
                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                        autocomplete="off"
                                                        class="ant-select-selection-search-input"
                                                        id="rc_select_TEST_OR_SSR"
                                                        readonly=""
                                                        role="combobox"
                                                        style="opacity: 0;"
                                                        type="search"
                                                        unselectable="on"
                                                        value=""
                                                      />,
                                                    }
                                                  }
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  loading={false}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onInputChange={[Function]}
                                                  onInputCompositionEnd={[Function]}
                                                  onInputCompositionStart={[Function]}
                                                  onInputKeyDown={[Function]}
                                                  onInputMouseDown={[Function]}
                                                  onInputPaste={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "value": "School",
                                                      },
                                                      Object {
                                                        "value": "Hospital",
                                                      },
                                                    ]
                                                  }
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={false}
                                                  tokenWithEnter={false}
                                                  transitionName="slide-up"
                                                  value={Array []}
                                                  values={Array []}
                                                >
                                                  <span
                                                    className="ant-select-selection-search"
                                                  >
                                                    <Input
                                                      accessibilityIndex={0}
                                                      attrs={Object {}}
                                                      editable={false}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      onChange={[Function]}
                                                      onCompositionEnd={[Function]}
                                                      onCompositionStart={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onPaste={[Function]}
                                                      prefixCls="ant-select"
                                                      value=""
                                                    >
                                                      <input
                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                        aria-autocomplete="list"
                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                        aria-haspopup="listbox"
                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                        autoComplete="off"
                                                        className="ant-select-selection-search-input"
                                                        id="rc_select_TEST_OR_SSR"
                                                        onChange={[Function]}
                                                        onCompositionEnd={[Function]}
                                                        onCompositionStart={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onPaste={[Function]}
                                                        readOnly={true}
                                                        role="combobox"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                          }
                                                        }
                                                        type="search"
                                                        unselectable="on"
                                                        value=""
                                                      />
                                                    </Input>
                                                  </span>
                                                  <span
                                                    className="ant-select-selection-placeholder"
                                                  />
                                                </SingleSelector>
                                              </div>
                                            </Selector>
                                          </Trigger>
                                        </SelectTrigger>
                                        <TransBtn
                                          className="ant-select-arrow"
                                          customizeIcon={[Function]}
                                          customizeIconProps={
                                            Object {
                                              "focused": false,
                                              "loading": false,
                                              "open": undefined,
                                              "searchValue": "",
                                              "showSearch": false,
                                            }
                                          }
                                        >
                                          <span
                                            aria-hidden={true}
                                            className="ant-select-arrow"
                                            onMouseDown={[Function]}
                                            style={
                                              Object {
                                                "WebkitUserSelect": "none",
                                                "userSelect": "none",
                                              }
                                            }
                                            unselectable="on"
                                          >
                                            <ForwardRef(DownOutlined)
                                              className="ant-select-suffix"
                                            >
                                              <AntdIcon
                                                className="ant-select-suffix"
                                                icon={
                                                  Object {
                                                    "icon": Object {
                                                      "attrs": Object {
                                                        "focusable": "false",
                                                        "viewBox": "64 64 896 896",
                                                      },
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {
                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                          },
                                                          "tag": "path",
                                                        },
                                                      ],
                                                      "tag": "svg",
                                                    },
                                                    "name": "down",
                                                    "theme": "outlined",
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-label="down"
                                                  className="anticon anticon-down ant-select-suffix"
                                                  role="img"
                                                >
                                                  <IconReact
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      data-icon="down"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      key="svg-down"
                                                      viewBox="64 64 896 896"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                        key="svg-down-svg-0"
                                                      />
                                                    </svg>
                                                  </IconReact>
                                                </span>
                                              </AntdIcon>
                                            </ForwardRef(DownOutlined)>
                                          </span>
                                        </TransBtn>
                                      </div>
                                    </ForwardRef(Select)>
                                  </Select>
                                </ForwardRef(InternalSelect)>
                              </Field>
                            </Component>
                          </Component>
                        </ServiceTypeSelect>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="externalId"
      label="External ID"
      name="externalId"
    >
      <Field
        name="externalId"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="externalId"
          label="External ID"
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="externalId"
                label="External ID"
                prefixCls="ant-form"
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required-mark-optional"
                      title="External ID"
                    >
                      External ID
                      <span
                        className="ant-form-item-optional"
                      >
                        (optional)
                      </span>
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="externalId"
                label="External ID"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <ForwardRef
                          name="externalId"
                          placeholder="Select status"
                        >
                          <Component
                            name="externalId"
                          >
                            <Field
                              name="externalId"
                            >
                              <Input
                                name="externalId"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Select status"
                                type="text"
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <input
                                      className="ant-input"
                                      name="externalId"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Select status"
                                      type="text"
                                    />
                                  }
                                  focused={false}
                                  handleReset={[Function]}
                                  inputType="input"
                                  name="externalId"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Select status"
                                  prefixCls="ant-input"
                                  triggerFocus={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="ant-input"
                                    name="externalId"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder="Select status"
                                    type="text"
                                    value=""
                                  />
                                </ClearableLabeledInput>
                              </Input>
                            </Field>
                          </Component>
                        </ForwardRef>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="geometry"
      label="geometry"
      name="geometry"
    >
      <Field
        name="geometry"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="geometry"
          label="geometry"
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="geometry"
                label="geometry"
                prefixCls="ant-form"
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required-mark-optional"
                      title="geometry"
                    >
                      geometry
                      <span
                        className="ant-form-item-optional"
                      >
                        (optional)
                      </span>
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="geometry"
                label="geometry"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <ForwardRef
                          name="geometry"
                          placeholder="</> JSON"
                          rows={4}
                        >
                          <Component
                            name="geometry"
                          >
                            <Field
                              name="geometry"
                            >
                              <ForwardRef
                                name="geometry"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="</> JSON"
                                rows={4}
                              >
                                <ClearableLabeledInput
                                  bordered={true}
                                  element={
                                    <TextArea
                                      className=""
                                      name="geometry"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="</> JSON"
                                      prefixCls="ant-input"
                                      rows={4}
                                    />
                                  }
                                  handleReset={[Function]}
                                  inputType="text"
                                  name="geometry"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="</> JSON"
                                  prefixCls="ant-input"
                                  rows={4}
                                  value=""
                                >
                                  <TextArea
                                    className=""
                                    name="geometry"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="</> JSON"
                                    prefixCls="ant-input"
                                    rows={4}
                                    value=""
                                  >
                                    <ResizableTextArea
                                      className=""
                                      name="geometry"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="</> JSON"
                                      prefixCls="ant-input"
                                      rows={4}
                                      value=""
                                    >
                                      <ResizeObserver
                                        disabled={true}
                                        onResize={[Function]}
                                      >
                                        <textarea
                                          className="ant-input"
                                          name="geometry"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="</> JSON"
                                          rows={4}
                                          style={Object {}}
                                          value=""
                                        />
                                      </ResizeObserver>
                                    </ResizableTextArea>
                                  </TextArea>
                                </ClearableLabeledInput>
                              </ForwardRef>
                            </Field>
                          </Component>
                        </ForwardRef>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      hidden={false}
      id="locationTags"
      label="Unit Group"
      name="locationTags"
    >
      <Field
        name="locationTags"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          hidden={false}
          id="locationTags"
          label="Unit Group"
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                hidden={false}
                id="locationTags"
                label="Unit Group"
                prefixCls="ant-form"
                requiredMark="optional"
              >
                <Col
                  className="ant-form-item-label"
                  span={8}
                >
                  <div
                    className="ant-col ant-col-8 ant-form-item-label"
                    style={Object {}}
                  >
                    <label
                      className="ant-form-item-required-mark-optional"
                      title="Unit Group"
                    >
                      Unit Group
                      <span
                        className="ant-form-item-optional"
                      >
                        (optional)
                      </span>
                    </label>
                  </div>
                </Col>
              </FormItemLabel>
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                hidden={false}
                id="locationTags"
                label="Unit Group"
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                status=""
                validateStatus=""
              >
                <Col
                  className="ant-form-item-control"
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <Component
                          allowClear={true}
                          filterOption={[Function]}
                          mode="multiple"
                          name="locationTags"
                          optionFilterProp="children"
                          placeholder="Enter a location group name"
                          showSearch={true}
                        >
                          <Component
                            name="locationTags"
                          >
                            <Field
                              name="locationTags"
                            >
                              <ForwardRef(InternalSelect)
                                allowClear={true}
                                filterOption={[Function]}
                                mode="multiple"
                                onBlur={[Function]}
                                onChange={[Function]}
                                optionFilterProp="children"
                                placeholder="Enter a location group name"
                                showSearch={true}
                                value={
                                  Array [
                                    2,
                                  ]
                                }
                              >
                                <Select
                                  allowClear={true}
                                  className=""
                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                  dropdownClassName=""
                                  filterOption={[Function]}
                                  inputIcon={[Function]}
                                  listHeight={256}
                                  listItemHeight={24}
                                  menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                  mode="multiple"
                                  notFoundContent={
                                    <Context.Consumer>
                                      [Function]
                                    </Context.Consumer>
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  optionFilterProp="children"
                                  placeholder="Enter a location group name"
                                  prefixCls="ant-select"
                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                  showSearch={true}
                                  transitionName="slide-up"
                                  value={
                                    Array [
                                      2,
                                    ]
                                  }
                                >
                                  <ForwardRef(Select)
                                    allowClear={true}
                                    className=""
                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                    dropdownClassName=""
                                    filterOption={[Function]}
                                    inputIcon={[Function]}
                                    listHeight={256}
                                    listItemHeight={24}
                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                    mode="multiple"
                                    notFoundContent={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    optionFilterProp="children"
                                    placeholder="Enter a location group name"
                                    prefixCls="ant-select"
                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                    showSearch={true}
                                    transitionName="slide-up"
                                    value={
                                      Array [
                                        2,
                                      ]
                                    }
                                  >
                                    <div
                                      className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                    >
                                      <SelectTrigger
                                        containerWidth={null}
                                        dropdownClassName=""
                                        empty={false}
                                        getTriggerDOMNode={[Function]}
                                        popupElement={
                                          <OptionList
                                            childrenAsData={true}
                                            defaultActiveFirstOption={true}
                                            flattenOptions={
                                              Array [
                                                Object {
                                                  "data": Object {
                                                    "children": "Sample 2",
                                                    "key": "2",
                                                    "value": 2,
                                                  },
                                                  "groupOption": false,
                                                  "key": "2",
                                                },
                                                Object {
                                                  "data": Object {
                                                    "children": "Option1",
                                                    "key": "4",
                                                    "value": 4,
                                                  },
                                                  "groupOption": false,
                                                  "key": "4",
                                                },
                                                Object {
                                                  "data": Object {
                                                    "children": "Sample 3",
                                                    "key": "3",
                                                    "value": 3,
                                                  },
                                                  "groupOption": false,
                                                  "key": "3",
                                                },
                                                Object {
                                                  "data": Object {
                                                    "children": "Sample 1",
                                                    "key": "1",
                                                    "value": 1,
                                                  },
                                                  "groupOption": false,
                                                  "key": "1",
                                                },
                                                Object {
                                                  "data": Object {
                                                    "children": "testing",
                                                    "key": "5",
                                                    "value": 5,
                                                  },
                                                  "groupOption": false,
                                                  "key": "5",
                                                },
                                                Object {
                                                  "data": Object {
                                                    "children": "Demo Test",
                                                    "key": "6",
                                                    "value": 6,
                                                  },
                                                  "groupOption": false,
                                                  "key": "6",
                                                },
                                              ]
                                            }
                                            height={256}
                                            id="rc_select_TEST_OR_SSR"
                                            itemHeight={24}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            multiple={true}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onActiveValue={[Function]}
                                            onMouseEnter={[Function]}
                                            onSelect={[Function]}
                                            onToggleOpen={[Function]}
                                            options={
                                              Array [
                                                Object {
                                                  "children": "Sample 2",
                                                  "key": "2",
                                                  "value": 2,
                                                },
                                                Object {
                                                  "children": "Option1",
                                                  "key": "4",
                                                  "value": 4,
                                                },
                                                Object {
                                                  "children": "Sample 3",
                                                  "key": "3",
                                                  "value": 3,
                                                },
                                                Object {
                                                  "children": "Sample 1",
                                                  "key": "1",
                                                  "value": 1,
                                                },
                                                Object {
                                                  "children": "testing",
                                                  "key": "5",
                                                  "value": 5,
                                                },
                                                Object {
                                                  "children": "Demo Test",
                                                  "key": "6",
                                                  "value": 6,
                                                },
                                              ]
                                            }
                                            prefixCls="ant-select"
                                            searchValue=""
                                            values={
                                              Set {
                                                2,
                                              }
                                            }
                                            virtual={true}
                                          />
                                        }
                                        prefixCls="ant-select"
                                        transitionName="slide-up"
                                      >
                                        <Trigger
                                          action={Array []}
                                          afterPopupVisibleChange={[Function]}
                                          autoDestroy={false}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 0,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          getTriggerDOMNode={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0}
                                          mouseLeaveDelay={0.1}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          popup={
                                            <div>
                                              <OptionList
                                                childrenAsData={true}
                                                defaultActiveFirstOption={true}
                                                flattenOptions={
                                                  Array [
                                                    Object {
                                                      "data": Object {
                                                        "children": "Sample 2",
                                                        "key": "2",
                                                        "value": 2,
                                                      },
                                                      "groupOption": false,
                                                      "key": "2",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "children": "Option1",
                                                        "key": "4",
                                                        "value": 4,
                                                      },
                                                      "groupOption": false,
                                                      "key": "4",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "children": "Sample 3",
                                                        "key": "3",
                                                        "value": 3,
                                                      },
                                                      "groupOption": false,
                                                      "key": "3",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "children": "Sample 1",
                                                        "key": "1",
                                                        "value": 1,
                                                      },
                                                      "groupOption": false,
                                                      "key": "1",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "children": "testing",
                                                        "key": "5",
                                                        "value": 5,
                                                      },
                                                      "groupOption": false,
                                                      "key": "5",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "children": "Demo Test",
                                                        "key": "6",
                                                        "value": 6,
                                                      },
                                                      "groupOption": false,
                                                      "key": "6",
                                                    },
                                                  ]
                                                }
                                                height={256}
                                                id="rc_select_TEST_OR_SSR"
                                                itemHeight={24}
                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                multiple={true}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                onActiveValue={[Function]}
                                                onMouseEnter={[Function]}
                                                onSelect={[Function]}
                                                onToggleOpen={[Function]}
                                                options={
                                                  Array [
                                                    Object {
                                                      "children": "Sample 2",
                                                      "key": "2",
                                                      "value": 2,
                                                    },
                                                    Object {
                                                      "children": "Option1",
                                                      "key": "4",
                                                      "value": 4,
                                                    },
                                                    Object {
                                                      "children": "Sample 3",
                                                      "key": "3",
                                                      "value": 3,
                                                    },
                                                    Object {
                                                      "children": "Sample 1",
                                                      "key": "1",
                                                      "value": 1,
                                                    },
                                                    Object {
                                                      "children": "testing",
                                                      "key": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "children": "Demo Test",
                                                      "key": "6",
                                                      "value": 6,
                                                    },
                                                  ]
                                                }
                                                prefixCls="ant-select"
                                                searchValue=""
                                                values={
                                                  Set {
                                                    2,
                                                  }
                                                }
                                                virtual={true}
                                              />
                                            </div>
                                          }
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="bottomLeft"
                                          popupStyle={
                                            Object {
                                              "minWidth": null,
                                              "width": null,
                                            }
                                          }
                                          popupTransitionName="slide-up"
                                          prefixCls="ant-select-dropdown"
                                          showAction={Array []}
                                        >
                                          <Selector
                                            accessibilityIndex={0}
                                            activeValue={null}
                                            allowClear={true}
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            domRef={
                                              Object {
                                                "current": <div
                                                  class="ant-select-selector"
                                                >
                                                  <span
                                                    class="ant-select-selection-item"
                                                  >
                                                    <span
                                                      class="ant-select-selection-item-content"
                                                    >
                                                      Sample 2
                                                    </span>
                                                    <span
                                                      aria-hidden="true"
                                                      class="ant-select-selection-item-remove"
                                                      style="user-select: none;"
                                                      unselectable="on"
                                                    >
                                                      <span
                                                        aria-label="close"
                                                        class="anticon anticon-close"
                                                        role="img"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="close"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                          />
                                                        </svg>
                                                      </span>
                                                    </span>
                                                  </span>
                                                  <span
                                                    class="ant-select-selection-search"
                                                    style="width: 0px;"
                                                  >
                                                    <input
                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                      aria-autocomplete="list"
                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                      aria-haspopup="listbox"
                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                      autocomplete="off"
                                                      class="ant-select-selection-search-input"
                                                      id="rc_select_TEST_OR_SSR"
                                                      readonly=""
                                                      role="combobox"
                                                      style="opacity: 0;"
                                                      type="search"
                                                      unselectable="on"
                                                      value=""
                                                    />
                                                    <span
                                                      aria-hidden="true"
                                                      class="ant-select-selection-search-mirror"
                                                    >
                                                      
                                                       
                                                    </span>
                                                  </span>
                                                </div>,
                                              }
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            id="rc_select_TEST_OR_SSR"
                                            inputElement={null}
                                            inputIcon={[Function]}
                                            key="trigger"
                                            listHeight={256}
                                            listItemHeight={24}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            multiple={true}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onSearch={[Function]}
                                            onSearchSubmit={[Function]}
                                            onSelect={[Function]}
                                            onToggleOpen={[Function]}
                                            optionFilterProp="children"
                                            placeholder="Enter a location group name"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            searchValue=""
                                            showSearch={true}
                                            tokenWithEnter={false}
                                            transitionName="slide-up"
                                            value={
                                              Array [
                                                2,
                                              ]
                                            }
                                            values={
                                              Array [
                                                Object {
                                                  "disabled": undefined,
                                                  "key": 2,
                                                  "label": "Sample 2",
                                                  "value": 2,
                                                },
                                              ]
                                            }
                                          >
                                            <div
                                              className="ant-select-selector"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                            >
                                              <SelectSelector
                                                accessibilityIndex={0}
                                                activeValue={null}
                                                allowClear={true}
                                                className=""
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                domRef={
                                                  Object {
                                                    "current": <div
                                                      class="ant-select-selector"
                                                    >
                                                      <span
                                                        class="ant-select-selection-item"
                                                      >
                                                        <span
                                                          class="ant-select-selection-item-content"
                                                        >
                                                          Sample 2
                                                        </span>
                                                        <span
                                                          aria-hidden="true"
                                                          class="ant-select-selection-item-remove"
                                                          style="user-select: none;"
                                                          unselectable="on"
                                                        >
                                                          <span
                                                            aria-label="close"
                                                            class="anticon anticon-close"
                                                            role="img"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              data-icon="close"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                              />
                                                            </svg>
                                                          </span>
                                                        </span>
                                                      </span>
                                                      <span
                                                        class="ant-select-selection-search"
                                                        style="width: 0px;"
                                                      >
                                                        <input
                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                          aria-autocomplete="list"
                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                          aria-haspopup="listbox"
                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                          autocomplete="off"
                                                          class="ant-select-selection-search-input"
                                                          id="rc_select_TEST_OR_SSR"
                                                          readonly=""
                                                          role="combobox"
                                                          style="opacity: 0;"
                                                          type="search"
                                                          unselectable="on"
                                                          value=""
                                                        />
                                                        <span
                                                          aria-hidden="true"
                                                          class="ant-select-selection-search-mirror"
                                                        >
                                                          
                                                           
                                                        </span>
                                                      </span>
                                                    </div>,
                                                  }
                                                }
                                                dropdownClassName=""
                                                filterOption={[Function]}
                                                id="rc_select_TEST_OR_SSR"
                                                inputElement={null}
                                                inputIcon={[Function]}
                                                inputRef={
                                                  Object {
                                                    "current": <input
                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                      aria-autocomplete="list"
                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                      aria-haspopup="listbox"
                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                      autocomplete="off"
                                                      class="ant-select-selection-search-input"
                                                      id="rc_select_TEST_OR_SSR"
                                                      readonly=""
                                                      role="combobox"
                                                      style="opacity: 0;"
                                                      type="search"
                                                      unselectable="on"
                                                      value=""
                                                    />,
                                                  }
                                                }
                                                listHeight={256}
                                                listItemHeight={24}
                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                mode="multiple"
                                                multiple={true}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onInputChange={[Function]}
                                                onInputCompositionEnd={[Function]}
                                                onInputCompositionStart={[Function]}
                                                onInputKeyDown={[Function]}
                                                onInputMouseDown={[Function]}
                                                onInputPaste={[Function]}
                                                onSearch={[Function]}
                                                onSearchSubmit={[Function]}
                                                onSelect={[Function]}
                                                onToggleOpen={[Function]}
                                                optionFilterProp="children"
                                                placeholder="Enter a location group name"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                showSearch={true}
                                                tokenWithEnter={false}
                                                transitionName="slide-up"
                                                value={
                                                  Array [
                                                    2,
                                                  ]
                                                }
                                                values={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": 2,
                                                      "label": "Sample 2",
                                                      "value": 2,
                                                    },
                                                  ]
                                                }
                                              >
                                                <CSSMotionList
                                                  component={false}
                                                  keys={
                                                    Array [
                                                      Object {
                                                        "disabled": undefined,
                                                        "key": 2,
                                                        "label": "Sample 2",
                                                        "value": 2,
                                                      },
                                                    ]
                                                  }
                                                  motionAppear={true}
                                                >
                                                  <CSSMotion
                                                    eventProps={
                                                      Object {
                                                        "disabled": undefined,
                                                        "key": "2",
                                                        "label": "Sample 2",
                                                        "value": 2,
                                                      }
                                                    }
                                                    key="2"
                                                    motionAppear={true}
                                                    onVisibleChanged={[Function]}
                                                    visible={true}
                                                  >
                                                    <DomWrapper>
                                                      <span
                                                        className="ant-select-selection-item"
                                                        key="2"
                                                      >
                                                        <span
                                                          className="ant-select-selection-item-content"
                                                        >
                                                          Sample 2
                                                        </span>
                                                        <TransBtn
                                                          className="ant-select-selection-item-remove"
                                                          customizeIcon={<ForwardRef(CloseOutlined) />}
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <span
                                                            aria-hidden={true}
                                                            className="ant-select-selection-item-remove"
                                                            onClick={[Function]}
                                                            onMouseDown={[Function]}
                                                            style={
                                                              Object {
                                                                "WebkitUserSelect": "none",
                                                                "userSelect": "none",
                                                              }
                                                            }
                                                            unselectable="on"
                                                          >
                                                            <ForwardRef(CloseOutlined)>
                                                              <AntdIcon
                                                                icon={
                                                                  Object {
                                                                    "icon": Object {
                                                                      "attrs": Object {
                                                                        "focusable": "false",
                                                                        "viewBox": "64 64 896 896",
                                                                      },
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                      ],
                                                                      "tag": "svg",
                                                                    },
                                                                    "name": "close",
                                                                    "theme": "outlined",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  aria-label="close"
                                                                  className="anticon anticon-close"
                                                                  role="img"
                                                                >
                                                                  <IconReact
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "close",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      data-icon="close"
                                                                      fill="currentColor"
                                                                      focusable="false"
                                                                      height="1em"
                                                                      key="svg-close"
                                                                      viewBox="64 64 896 896"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                        key="svg-close-svg-0"
                                                                      />
                                                                    </svg>
                                                                  </IconReact>
                                                                </span>
                                                              </AntdIcon>
                                                            </ForwardRef(CloseOutlined)>
                                                          </span>
                                                        </TransBtn>
                                                      </span>
                                                    </DomWrapper>
                                                  </CSSMotion>
                                                </CSSMotionList>
                                                <span
                                                  className="ant-select-selection-search"
                                                  style={
                                                    Object {
                                                      "width": 0,
                                                    }
                                                  }
                                                >
                                                  <Input
                                                    accessibilityIndex={0}
                                                    attrs={Object {}}
                                                    id="rc_select_TEST_OR_SSR"
                                                    inputElement={null}
                                                    onChange={[Function]}
                                                    onCompositionEnd={[Function]}
                                                    onCompositionStart={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onPaste={[Function]}
                                                    prefixCls="ant-select"
                                                    value=""
                                                  >
                                                    <input
                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                      aria-autocomplete="list"
                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                      aria-haspopup="listbox"
                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                      autoComplete="off"
                                                      className="ant-select-selection-search-input"
                                                      id="rc_select_TEST_OR_SSR"
                                                      onChange={[Function]}
                                                      onCompositionEnd={[Function]}
                                                      onCompositionStart={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onPaste={[Function]}
                                                      readOnly={true}
                                                      role="combobox"
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                        }
                                                      }
                                                      type="search"
                                                      unselectable="on"
                                                      value=""
                                                    />
                                                  </Input>
                                                  <span
                                                    aria-hidden={true}
                                                    className="ant-select-selection-search-mirror"
                                                  >
                                                     
                                                  </span>
                                                </span>
                                              </SelectSelector>
                                            </div>
                                          </Selector>
                                        </Trigger>
                                      </SelectTrigger>
                                      <TransBtn
                                        className="ant-select-clear"
                                        customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                        onMouseDown={[Function]}
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="ant-select-clear"
                                          onMouseDown={[Function]}
                                          style={
                                            Object {
                                              "WebkitUserSelect": "none",
                                              "userSelect": "none",
                                            }
                                          }
                                          unselectable="on"
                                        >
                                          <ForwardRef(CloseCircleFilled)>
                                            <AntdIcon
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "close-circle",
                                                  "theme": "filled",
                                                }
                                              }
                                            >
                                              <span
                                                aria-label="close-circle"
                                                className="anticon anticon-close-circle"
                                                role="img"
                                              >
                                                <IconReact
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "close-circle",
                                                      "theme": "filled",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    data-icon="close-circle"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height="1em"
                                                    key="svg-close-circle"
                                                    viewBox="64 64 896 896"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                      key="svg-close-circle-svg-0"
                                                    />
                                                  </svg>
                                                </IconReact>
                                              </span>
                                            </AntdIcon>
                                          </ForwardRef(CloseCircleFilled)>
                                        </span>
                                      </TransBtn>
                                    </div>
                                  </ForwardRef(Select)>
                                </Select>
                              </ForwardRef(InternalSelect)>
                            </Field>
                          </Component>
                        </Component>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
    <Component
      name="buttons"
      wrapperCol={
        Object {
          "offset": 8,
          "span": 11,
        }
      }
    >
      <Field
        name="buttons"
      >
        <FormItem
          hasFeedback={false}
          help={false}
          wrapperCol={
            Object {
              "offset": 8,
              "span": 11,
            }
          }
        >
          <Row
            className="ant-form-item"
            key="row"
          >
            <div
              className="ant-row ant-form-item"
              style={Object {}}
            >
              <FormItemLabel
                hasFeedback={false}
                help={false}
                prefixCls="ant-form"
                requiredMark="optional"
                wrapperCol={
                  Object {
                    "offset": 8,
                    "span": 11,
                  }
                }
              />
              <FormItemInput
                errors={Array []}
                hasFeedback={false}
                help={false}
                onDomErrorVisibleChange={[Function]}
                prefixCls="ant-form"
                status=""
                validateStatus=""
                wrapperCol={
                  Object {
                    "offset": 8,
                    "span": 11,
                  }
                }
              >
                <Col
                  className="ant-form-item-control"
                  offset={8}
                  span={11}
                >
                  <div
                    className="ant-col ant-col-11 ant-col-offset-8 ant-form-item-control"
                    style={Object {}}
                  >
                    <div
                      className="ant-form-item-control-input"
                    >
                      <div
                        className="ant-form-item-control-input-content"
                      >
                        <Component
                          id="submit"
                        >
                          <Field>
                            <Button
                              block={false}
                              disabled={false}
                              ghost={false}
                              htmlType="submit"
                              id="submit"
                              loading={false}
                              type="primary"
                            >
                              <Wave>
                                <button
                                  className="ant-btn ant-btn-primary"
                                  disabled={false}
                                  id="submit"
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <LoadingIcon
                                    existIcon={false}
                                    loading={false}
                                    prefixCls="ant-btn"
                                  >
                                    <CSSMotion
                                      motionName="ant-btn-loading-icon-motion"
                                      onAppearActive={[Function]}
                                      onAppearStart={[Function]}
                                      onEnterActive={[Function]}
                                      onEnterStart={[Function]}
                                      onLeaveActive={[Function]}
                                      onLeaveStart={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </LoadingIcon>
                                  <span
                                    key=".0"
                                  >
                                    Save
                                  </span>
                                </button>
                              </Wave>
                            </Button>
                          </Field>
                        </Component>
                        <Button
                          block={false}
                          ghost={false}
                          htmlType="button"
                          id="cancel"
                          loading={false}
                          onClick={[Function]}
                          type="dashed"
                        >
                          <Wave>
                            <button
                              className="ant-btn ant-btn-dashed"
                              id="cancel"
                              onClick={[Function]}
                              type="button"
                            >
                              <LoadingIcon
                                existIcon={false}
                                loading={false}
                                prefixCls="ant-btn"
                              >
                                <CSSMotion
                                  motionName="ant-btn-loading-icon-motion"
                                  onAppearActive={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveStart={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </LoadingIcon>
                              <span
                                key=".0"
                              >
                                Cancel
                              </span>
                            </button>
                          </Wave>
                        </Button>
                      </div>
                    </div>
                    <ErrorList
                      errors={Array []}
                      help={false}
                      onDomErrorVisibleChange={[Function]}
                    >
                      <CSSMotion
                        motionAppear={true}
                        motionDeadline={500}
                        motionName="show-help"
                        onLeaveEnd={[Function]}
                        removeOnLeave={true}
                        visible={false}
                      >
                        <DomWrapper />
                      </CSSMotion>
                    </ErrorList>
                  </div>
                </Col>
              </FormItemInput>
            </div>
          </Row>
        </FormItem>
      </Field>
    </Component>
  </form>
</ForwardRef(Form)>
`;
