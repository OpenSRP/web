// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/pages/locations/LocationTagAddition renders without crashing 1`] = `
Object {
  "children": Array [
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
    >
      <title>
        Add Location Unit Group
      </title>
    </HelmetWrapper>,
    <h5
      className="mb-3"
    >
      Add Location Unit Group
    </h5>,
    <div
      className="bg-white p-5"
    >
      <ForwardRef(InternalForm)
        initialValues={
          Object {
            "status": "active",
          }
        }
        labelCol={
          Object {
            "span": 8,
          }
        }
        name="location-add"
        requiredMark="optional"
        validateMessages={
          Object {
            "number": Object {
              "range": "\${label} must be between \${min} and \${max}",
            },
            "required": "\${label} is required!",
            "types": Object {
              "email": "\${label} is not validate email!",
              "number": "\${label} is not a validate number!",
            },
          }
        }
        wrapperCol={
          Object {
            "span": 8,
          }
        }
      >
        <FormItem
          label="Location Name"
          name="name"
          rules={
            Array [
              Object {
                "required": true,
              },
            ]
          }
        >
          <Select
            bordered={true}
            choiceTransitionName=""
            filterOption={[Function]}
            optionFilterProp="children"
            placeholder="Enter a location group name"
            showSearch={true}
            transitionName="slide-up"
          >
            <Option
              chec={true}
              value="Option1"
            >
              Option 1
            </Option>
            <Option
              chec={true}
              value="Option2"
            >
              Option 2
            </Option>
            <Option
              chec={true}
              value="Option3"
            >
              Option 3
            </Option>
          </Select>
        </FormItem>
        <FormItem
          label="Status"
          name="status"
          rules={
            Array [
              Object {
                "required": true,
              },
            ]
          }
          valuePropName="checked"
        >
          <Memo
            defaultValue="active"
          >
            <Radio
              type="radio"
              value="active"
            >
              Active
            </Radio>
            <Radio
              type="radio"
              value="inactive"
            >
              Inactive
            </Radio>
          </Memo>
        </FormItem>
        <FormItem
          label="Type"
          name="type"
          rules={
            Array [
              Object {
                "required": true,
              },
            ]
          }
        >
          <TextArea
            placeholder="Description"
            rows={4}
          />
        </FormItem>
        <FormItem
          wrapperCol={
            Object {
              "offset": 8,
              "span": 8,
            }
          }
        >
          <Button
            block={false}
            ghost={false}
            htmlType="submit"
            loading={false}
            type="primary"
          >
            Submit
          </Button>
          <Button
            block={false}
            ghost={false}
            htmlType="reset"
            loading={false}
            type="default"
          >
            Cancel
          </Button>
        </FormItem>
      </ForwardRef(InternalForm)>
    </div>,
  ],
}
`;
